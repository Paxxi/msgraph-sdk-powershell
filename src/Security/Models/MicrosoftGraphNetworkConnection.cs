// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.0.6306, generator: {generator})
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using Microsoft.Graph.PowerShell.Runtime;

namespace Microsoft.Graph.PowerShell.Security.Models
{
    /// <summary>networkConnection</summary>
    public class MicrosoftGraphNetworkConnection
    {
        /// <summary>Backing field for <see cref="DestinationDomain" /> property.</summary>
        private string _destinationDomain;

        /// <summary>
        ///     Name of the application managing the network connection (for example, Facebook, SMTP, etc.).
        /// </summary>
        [Info(
            Required = false,
            ReadOnly = false,
            Description =
                @"Name of the application managing the network connection (for example, Facebook, SMTP, etc.).",
            SerializedName = @"applicationName",
            PossibleTypes = new[] {typeof(string)})]
        [Origin(PropertyOrigin.Owned)]
        public string ApplicationName { get; set; }

        /// <summary>Destination IP address (of the network connection).</summary>
        [Info(
            Required = false,
            ReadOnly = false,
            Description = @"Destination IP address (of the network connection).",
            SerializedName = @"destinationAddress",
            PossibleTypes = new[] {typeof(string)})]
        [Origin(PropertyOrigin.Owned)]
        public string DestinationAddress { get; set; }

        /// <summary>
        ///     Destination domain portion of the destination URL. (for example 'www.contoso.com').
        /// </summary>
        [Info(
            Required = false,
            ReadOnly = false,
            Description = @"Destination domain portion of the destination URL. (for example 'www.contoso.com').",
            SerializedName = @"destinationDomain",
            PossibleTypes = new[] {typeof(string)})]
        [Origin(PropertyOrigin.Owned)]
        public string DestinationDomain
        {
            get => _destinationDomain;
            set => _destinationDomain = value;
        }

        /// <summary>
        ///     Location (by IP address mapping) associated with the destination of a network connection.
        /// </summary>
        [Info(
            Required = false,
            ReadOnly = false,
            Description = @"Location (by IP address mapping) associated with the destination of a network connection.",
            SerializedName = @"destinationLocation",
            PossibleTypes = new[] {typeof(string)})]
        [Origin(PropertyOrigin.Owned)]
        public string DestinationLocation { get; set; }

        /// <summary>Destination port (of the network connection).</summary>
        [Info(
            Required = false,
            ReadOnly = false,
            Description = @"Destination port (of the network connection).",
            SerializedName = @"destinationPort",
            PossibleTypes = new[] {typeof(string)})]
        [Origin(PropertyOrigin.Owned)]
        public string DestinationPort { get; set; }

        /// <summary>
        ///     Network connection URL/URI string - excluding parameters. (for example 'www.contoso.com/products/default.html')
        /// </summary>
        [Info(
            Required = false,
            ReadOnly = false,
            Description =
                @"Network connection URL/URI string - excluding parameters. (for example 'www.contoso.com/products/default.html')",
            SerializedName = @"destinationUrl",
            PossibleTypes = new[] {typeof(string)})]
        [Origin(PropertyOrigin.Owned)]
        public string DestinationUrl { get; set; }

        /// <summary>connectionDirection</summary>
        [Info(
            Required = false,
            ReadOnly = false,
            Description = @"connectionDirection",
            SerializedName = @"direction",
            PossibleTypes = new[] {typeof(string)})]
        [Origin(PropertyOrigin.Owned)]
        public string Direction { get; set; }

        /// <summary>
        ///     Date when the destination domain was registered. The Timestamp type represents date and time information using ISO
        ///     8601
        ///     format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        /// </summary>
        [Info(
            Required = false,
            ReadOnly = false,
            Description =
                @"Date when the destination domain was registered. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
            SerializedName = @"domainRegisteredDateTime",
            PossibleTypes = new[] {typeof(DateTime)})]
        [Origin(PropertyOrigin.Owned)]
        public DateTime? DomainRegisteredDateTime { get; set; }

        /// <summary>
        ///     The local DNS name resolution as it appears in the host's local DNS cache (for example, in case the 'hosts' file
        ///     was tampered
        ///     with).
        /// </summary>
        [Info(
            Required = false,
            ReadOnly = false,
            Description =
                @"The local DNS name resolution as it appears in the host's local DNS cache (for example, in case the 'hosts' file was tampered with).",
            SerializedName = @"localDnsName",
            PossibleTypes = new[] {typeof(string)})]
        [Origin(PropertyOrigin.Owned)]
        public string LocalDnsName { get; set; }

        /// <summary>Network Address Translation destination IP address.</summary>
        [Info(
            Required = false,
            ReadOnly = false,
            Description = @"Network Address Translation destination IP address.",
            SerializedName = @"natDestinationAddress",
            PossibleTypes = new[] {typeof(string)})]
        [Origin(PropertyOrigin.Owned)]
        public string NatDestinationAddress { get; set; }

        /// <summary>Network Address Translation destination port.</summary>
        [Info(
            Required = false,
            ReadOnly = false,
            Description = @"Network Address Translation destination port.",
            SerializedName = @"natDestinationPort",
            PossibleTypes = new[] {typeof(string)})]
        [Origin(PropertyOrigin.Owned)]
        public string NatDestinationPort { get; set; }

        /// <summary>Network Address Translation source IP address.</summary>
        [Info(
            Required = false,
            ReadOnly = false,
            Description = @"Network Address Translation source IP address.",
            SerializedName = @"natSourceAddress",
            PossibleTypes = new[] {typeof(string)})]
        [Origin(PropertyOrigin.Owned)]
        public string NatSourceAddress { get; set; }

        /// <summary>Network Address Translation source port.</summary>
        [Info(
            Required = false,
            ReadOnly = false,
            Description = @"Network Address Translation source port.",
            SerializedName = @"natSourcePort",
            PossibleTypes = new[] {typeof(string)})]
        [Origin(PropertyOrigin.Owned)]
        public string NatSourcePort { get; set; }

        /// <summary>securityNetworkProtocol</summary>
        [Info(
            Required = false,
            ReadOnly = false,
            Description = @"securityNetworkProtocol",
            SerializedName = @"protocol",
            PossibleTypes = new[] {typeof(string)})]
        [Origin(PropertyOrigin.Owned)]
        public string Protocol { get; set; }

        /// <summary>
        ///     Provider generated/calculated risk score of the network connection. Recommended value range of 0-1, which equates
        ///     to a
        ///     percentage.
        /// </summary>
        [Info(
            Required = false,
            ReadOnly = false,
            Description =
                @"Provider generated/calculated risk score of the network connection. Recommended value range of 0-1, which equates to a percentage.",
            SerializedName = @"riskScore",
            PossibleTypes = new[] {typeof(string)})]
        [Origin(PropertyOrigin.Owned)]
        public string RiskScore { get; set; }

        /// <summary>Source (i.e. origin) IP address (of the network connection).</summary>
        [Info(
            Required = false,
            ReadOnly = false,
            Description = @"Source (i.e. origin) IP address (of the network connection).",
            SerializedName = @"sourceAddress",
            PossibleTypes = new[] {typeof(string)})]
        [Origin(PropertyOrigin.Owned)]
        public string SourceAddress { get; set; }

        /// <summary>
        ///     Location (by IP address mapping) associated with the source of a network connection.
        /// </summary>
        [Info(
            Required = false,
            ReadOnly = false,
            Description = @"Location (by IP address mapping) associated with the source of a network connection.",
            SerializedName = @"sourceLocation",
            PossibleTypes = new[] {typeof(string)})]
        [Origin(PropertyOrigin.Owned)]
        public string SourceLocation { get; set; }

        /// <summary>Source (i.e. origin) IP port (of the network connection).</summary>
        [Info(
            Required = false,
            ReadOnly = false,
            Description = @"Source (i.e. origin) IP port (of the network connection).",
            SerializedName = @"sourcePort",
            PossibleTypes = new[] {typeof(string)})]
        [Origin(PropertyOrigin.Owned)]
        public string SourcePort { get; set; }

        /// <summary>connectionStatus</summary>
        [Info(
            Required = false,
            ReadOnly = false,
            Description = @"connectionStatus",
            SerializedName = @"status",
            PossibleTypes = new[] {typeof(string)})]
        [Origin(PropertyOrigin.Owned)]
        public string Status { get; set; }

        /// <summary>Parameters (suffix) of the destination URL.</summary>
        [Info(
            Required = false,
            ReadOnly = false,
            Description = @"Parameters (suffix) of the destination URL.",
            SerializedName = @"urlParameters",
            PossibleTypes = new[] {typeof(string)})]
        [Origin(PropertyOrigin.Owned)]
        public string UrlParameters { get; set; }
    }
}