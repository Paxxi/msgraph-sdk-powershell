// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>outlookTask</summary>
    public partial class MgOutlookTask
    {

        /// <summary>Backing field for <see cref="AssignedTo" /> property.</summary>
        private string _assignedTo;

        /// <summary>The name of the person who has been assigned the task in Outlook. Read-only.</summary>
        public string AssignedTo { get => this._assignedTo; set => this._assignedTo = value; }

        /// <summary>Backing field for <see cref="Attachments" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgAttachment[] _attachments;

        /// <summary>
        /// The collection of fileAttachment, itemAttachment, and referenceAttachment attachments for the task. Read-only. Nullable.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgAttachment[] Attachments { get => this._attachments; set => this._attachments = value; }

        /// <summary>Backing field for <see cref="Body" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgItemBody _body;

        /// <summary>itemBody</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgItemBody Body { get => (this._body = this._body ?? new Microsoft.Graph.PowerShell.Users.Models.MgItemBody()); set => this._body = value; }

        /// <summary>The categories associated with the item</summary>
        public string[] Categories { get; set; }

        /// <summary>
        /// Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to
        /// apply changes to the correct version of the object. Read-only.
        /// </summary>
        public string ChangeKey { get; set; }

        /// <summary>Backing field for <see cref="CompletedDateTime" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDateTimeZone _completedDateTime;

        /// <summary>dateTimeTimeZone</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDateTimeZone CompletedDateTime { get => (this._completedDateTime = this._completedDateTime ?? new Microsoft.Graph.PowerShell.Users.Models.MgDateTimeZone()); set => this._completedDateTime = value; }

        /// <summary>
        /// The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example,
        /// midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        /// </summary>
        public global::System.DateTime? CreatedDateTime { get; set; }

        /// <summary>Backing field for <see cref="DueDateTime" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDateTimeZone _dueDateTime;

        /// <summary>dateTimeTimeZone</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDateTimeZone DueDateTime { get => (this._dueDateTime = this._dueDateTime ?? new Microsoft.Graph.PowerShell.Users.Models.MgDateTimeZone()); set => this._dueDateTime = value; }

        /// <summary>Backing field for <see cref="HasAttachments" /> property.</summary>
        private bool? _hasAttachments;

        /// <summary>Set to true if the task has attachments.</summary>
        public bool? HasAttachments { get => this._hasAttachments; set => this._hasAttachments = value; }

        /// <summary>Read-only.</summary>
        public string Id { get; set; }

        /// <summary>Backing field for <see cref="Importance" /> property.</summary>
        private string _importance;

        /// <summary>importance</summary>
        public string Importance { get => this._importance; set => this._importance = value; }

        /// <summary>Backing field for <see cref="IsReminderOn" /> property.</summary>
        private bool? _isReminderOn;

        public bool? IsReminderOn { get => this._isReminderOn; set => this._isReminderOn = value; }

        /// <summary>
        /// The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example,
        /// midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        /// </summary>
        public global::System.DateTime? LastModifiedDateTime { get; set; }

        /// <summary>Backing field for <see cref="MultiValueExtendedProperties" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgMultiValueLegacyExtendedProperty[] _multiValueExtendedProperties;

        /// <summary>
        /// The collection of multi-value extended properties defined for the task. Read-only. Nullable.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgMultiValueLegacyExtendedProperty[] MultiValueExtendedProperties { get => this._multiValueExtendedProperties; set => this._multiValueExtendedProperties = value; }

        /// <summary>Backing field for <see cref="Owner" /> property.</summary>
        private string _owner;

        public string Owner { get => this._owner; set => this._owner = value; }

        /// <summary>Backing field for <see cref="ParentFolderId" /> property.</summary>
        private string _parentFolderId;

        public string ParentFolderId { get => this._parentFolderId; set => this._parentFolderId = value; }

        /// <summary>Backing field for <see cref="Recurrence" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgPatternedRecurrence _recurrence;

        /// <summary>patternedRecurrence</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgPatternedRecurrence Recurrence { get => (this._recurrence = this._recurrence ?? new Microsoft.Graph.PowerShell.Users.Models.MgPatternedRecurrence()); set => this._recurrence = value; }

        /// <summary>Backing field for <see cref="ReminderDateTime" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDateTimeZone _reminderDateTime;

        /// <summary>dateTimeTimeZone</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDateTimeZone ReminderDateTime { get => (this._reminderDateTime = this._reminderDateTime ?? new Microsoft.Graph.PowerShell.Users.Models.MgDateTimeZone()); set => this._reminderDateTime = value; }

        /// <summary>Backing field for <see cref="Sensitivity" /> property.</summary>
        private string _sensitivity;

        /// <summary>sensitivity</summary>
        public string Sensitivity { get => this._sensitivity; set => this._sensitivity = value; }

        /// <summary>Backing field for <see cref="SingleValueExtendedProperties" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgSingleValueLegacyExtendedProperty[] _singleValueExtendedProperties;

        /// <summary>
        /// The collection of single-value extended properties defined for the task. Read-only. Nullable.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgSingleValueLegacyExtendedProperty[] SingleValueExtendedProperties { get => this._singleValueExtendedProperties; set => this._singleValueExtendedProperties = value; }

        /// <summary>Backing field for <see cref="StartDateTime" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDateTimeZone _startDateTime;

        /// <summary>dateTimeTimeZone</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDateTimeZone StartDateTime { get => (this._startDateTime = this._startDateTime ?? new Microsoft.Graph.PowerShell.Users.Models.MgDateTimeZone()); set => this._startDateTime = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private string _status;

        /// <summary>taskStatus</summary>
        public string Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="Subject" /> property.</summary>
        private string _subject;

        public string Subject { get => this._subject; set => this._subject = value; }

    }
}