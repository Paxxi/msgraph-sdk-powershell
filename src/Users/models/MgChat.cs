// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>chat</summary>
    public partial class MgChat
    {

        /// <summary>Backing field for <see cref="ChatType" /> property.</summary>
        private string _chatType;

        /// <summary>chatType</summary>
        public string ChatType { get => this._chatType; set => this._chatType = value; }

        /// <summary>Backing field for <see cref="CreatedDateTime" /> property.</summary>
        private global::System.DateTime? _createdDateTime;

        /// <summary>Date and time at which the chat was created. Read-only.</summary>
        public global::System.DateTime? CreatedDateTime { get => this._createdDateTime; set => this._createdDateTime = value; }

        /// <summary>Read-only.</summary>
        public string Id { get; set; }

        /// <summary>Backing field for <see cref="InstalledApps" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgTeamsAppInstallation[] _installedApps;

        /// <summary>A collection of all the apps in the chat. Nullable.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgTeamsAppInstallation[] InstalledApps { get => this._installedApps; set => this._installedApps = value; }

        /// <summary>Backing field for <see cref="LastMessagePreview" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgChatMessageInfo _lastMessagePreview;

        /// <summary>chatMessageInfo</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgChatMessageInfo LastMessagePreview { get => (this._lastMessagePreview = this._lastMessagePreview ?? new Microsoft.Graph.PowerShell.Users.Models.MgChatMessageInfo()); set => this._lastMessagePreview = value; }

        /// <summary>Backing field for <see cref="LastUpdatedDateTime" /> property.</summary>
        private global::System.DateTime? _lastUpdatedDateTime;

        /// <summary>
        /// Date and time at which the chat was renamed or list of members were last changed. Read-only.
        /// </summary>
        public global::System.DateTime? LastUpdatedDateTime { get => this._lastUpdatedDateTime; set => this._lastUpdatedDateTime = value; }

        /// <summary>Backing field for <see cref="Members" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgConversationMember[] _members;

        /// <summary>A collection of all the members in the chat. Nullable.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgConversationMember[] Members { get => this._members; set => this._members = value; }

        /// <summary>Backing field for <see cref="Messages" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgChatMessage[] _messages;

        /// <summary>A collection of all the messages in the chat. Nullable.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgChatMessage[] Messages { get => this._messages; set => this._messages = value; }

        /// <summary>Backing field for <see cref="Operations" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgTeamsAsyncOperation[] _operations;

        /// <summary>
        /// A collection of all the Teams async operations that ran or are running on the chat. Nullable.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgTeamsAsyncOperation[] Operations { get => this._operations; set => this._operations = value; }

        /// <summary>Backing field for <see cref="PermissionGrants" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgResourceSpecificPermissionGrant[] _permissionGrants;

        /// <summary>A collection of permissions granted to apps for the chat.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgResourceSpecificPermissionGrant[] PermissionGrants { get => this._permissionGrants; set => this._permissionGrants = value; }

        /// <summary>Backing field for <see cref="Tabs" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgTeamsTab[] _tabs;

        public Microsoft.Graph.PowerShell.Users.Models.MgTeamsTab[] Tabs { get => this._tabs; set => this._tabs = value; }

        /// <summary>Backing field for <see cref="Topic" /> property.</summary>
        private string _topic;

        /// <summary>(Optional) Subject or topic for the chat. Only available for group chats.</summary>
        public string Topic { get => this._topic; set => this._topic = value; }

        /// <summary>Backing field for <see cref="Viewpoint" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgChatViewpoint _viewpoint;

        /// <summary>chatViewpoint</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgChatViewpoint Viewpoint { get => (this._viewpoint = this._viewpoint ?? new Microsoft.Graph.PowerShell.Users.Models.MgChatViewpoint()); set => this._viewpoint = value; }

        /// <summary>Backing field for <see cref="WebUrl" /> property.</summary>
        private string _webUrl;

        /// <summary>
        /// A hyperlink that will go to the chat in Microsoft Teams. This URL should be treated as an opaque blob, and not parsed.
        /// Read-only.
        /// </summary>
        public string WebUrl { get => this._webUrl; set => this._webUrl = value; }

    }
}