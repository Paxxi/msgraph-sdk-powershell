// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>workbookChartLegend</summary>
    public partial class MgWorkbookChartLegend
    {

        /// <summary>Backing field for <see cref="Format" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgWorkbookChartLegendFormat _format;

        /// <summary>workbookChartLegendFormat</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgWorkbookChartLegendFormat Format { get => (this._format = this._format ?? new Microsoft.Graph.PowerShell.Users.Models.MgWorkbookChartLegendFormat()); set => this._format = value; }

        /// <summary>Read-only.</summary>
        public string Id { get; set; }

        /// <summary>Backing field for <see cref="Overlay" /> property.</summary>
        private bool? _overlay;

        /// <summary>
        /// Boolean value for whether the chart legend should overlap with the main body of the chart.
        /// </summary>
        public bool? Overlay { get => this._overlay; set => this._overlay = value; }

        /// <summary>Backing field for <see cref="Position" /> property.</summary>
        private string _position;

        /// <summary>
        /// Represents the position of the legend on the chart. The possible values are: Top, Bottom, Left, Right, Corner, Custom.
        /// </summary>
        public string Position { get => this._position; set => this._position = value; }

        /// <summary>Backing field for <see cref="Visible" /> property.</summary>
        private bool? _visible;

        /// <summary>A boolean value the represents the visibility of a ChartLegend object.</summary>
        public bool? Visible { get => this._visible; set => this._visible = value; }

    }
}