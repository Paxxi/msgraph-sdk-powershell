// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>workbookTable</summary>
    public partial class MgWorkbookTable
    {

        /// <summary>Backing field for <see cref="Columns" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgWorkbookTableColumn[] _columns;

        /// <summary>Represents a collection of all the columns in the table. Read-only.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgWorkbookTableColumn[] Columns { get => this._columns; set => this._columns = value; }

        /// <summary>Backing field for <see cref="HighlightFirstColumn" /> property.</summary>
        private bool? _highlightFirstColumn;

        /// <summary>Indicates whether the first column contains special formatting.</summary>
        public bool? HighlightFirstColumn { get => this._highlightFirstColumn; set => this._highlightFirstColumn = value; }

        /// <summary>Backing field for <see cref="HighlightLastColumn" /> property.</summary>
        private bool? _highlightLastColumn;

        /// <summary>Indicates whether the last column contains special formatting.</summary>
        public bool? HighlightLastColumn { get => this._highlightLastColumn; set => this._highlightLastColumn = value; }

        /// <summary>Read-only.</summary>
        public string Id { get; set; }

        /// <summary>Backing field for <see cref="LegacyId" /> property.</summary>
        private string _legacyId;

        /// <summary>
        /// Legacy Id used in older Excle clients. The value of the identifier remains the same even when the table is renamed. This
        /// property should be interpreted as an opaque string value and should not be parsed to any other type. Read-only.
        /// </summary>
        public string LegacyId { get => this._legacyId; set => this._legacyId = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of the table.</summary>
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Rows" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgWorkbookTableRow[] _rows;

        /// <summary>Represents a collection of all the rows in the table. Read-only.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgWorkbookTableRow[] Rows { get => this._rows; set => this._rows = value; }

        /// <summary>Backing field for <see cref="ShowBandedColumns" /> property.</summary>
        private bool? _showBandedColumns;

        /// <summary>
        /// Indicates whether the columns show banded formatting in which odd columns are highlighted differently from even ones to
        /// make reading the table easier.
        /// </summary>
        public bool? ShowBandedColumns { get => this._showBandedColumns; set => this._showBandedColumns = value; }

        /// <summary>Backing field for <see cref="ShowBandedRows" /> property.</summary>
        private bool? _showBandedRows;

        /// <summary>
        /// Indicates whether the rows show banded formatting in which odd rows are highlighted differently from even ones to make
        /// reading the table easier.
        /// </summary>
        public bool? ShowBandedRows { get => this._showBandedRows; set => this._showBandedRows = value; }

        /// <summary>Backing field for <see cref="ShowFilterButton" /> property.</summary>
        private bool? _showFilterButton;

        /// <summary>
        /// Indicates whether the filter buttons are visible at the top of each column header. Setting this is only allowed if the
        /// table contains a header row.
        /// </summary>
        public bool? ShowFilterButton { get => this._showFilterButton; set => this._showFilterButton = value; }

        /// <summary>Backing field for <see cref="ShowHeaders" /> property.</summary>
        private bool? _showHeaders;

        /// <summary>
        /// Indicates whether the header row is visible or not. This value can be set to show or remove the header row.
        /// </summary>
        public bool? ShowHeaders { get => this._showHeaders; set => this._showHeaders = value; }

        /// <summary>Backing field for <see cref="ShowTotals" /> property.</summary>
        private bool? _showTotals;

        /// <summary>
        /// Indicates whether the total row is visible or not. This value can be set to show or remove the total row.
        /// </summary>
        public bool? ShowTotals { get => this._showTotals; set => this._showTotals = value; }

        /// <summary>Backing field for <see cref="Sort" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgWorkbookTableSort _sort;

        /// <summary>workbookTableSort</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgWorkbookTableSort Sort { get => (this._sort = this._sort ?? new Microsoft.Graph.PowerShell.Users.Models.MgWorkbookTableSort()); set => this._sort = value; }

        /// <summary>Backing field for <see cref="Style" /> property.</summary>
        private string _style;

        /// <summary>
        /// Constant value that represents the Table style. Possible values are: TableStyleLight1 thru TableStyleLight21, TableStyleMedium1
        /// thru TableStyleMedium28, TableStyleStyleDark1 thru TableStyleStyleDark11. A custom user-defined style present in the workbook
        /// can also be specified.
        /// </summary>
        public string Style { get => this._style; set => this._style = value; }

        /// <summary>Backing field for <see cref="Worksheet" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgWorkbookWorksheet _worksheet;

        /// <summary>workbookWorksheet</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgWorkbookWorksheet Worksheet { get => (this._worksheet = this._worksheet ?? new Microsoft.Graph.PowerShell.Users.Models.MgWorkbookWorksheet()); set => this._worksheet = value; }

    }
}