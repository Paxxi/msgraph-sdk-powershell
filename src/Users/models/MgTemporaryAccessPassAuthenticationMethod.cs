// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>temporaryAccessPassAuthenticationMethod</summary>
    public partial class MgTemporaryAccessPassAuthenticationMethod
    {

        /// <summary>Backing field for <see cref="CreatedDateTime" /> property.</summary>
        private global::System.DateTime? _createdDateTime;

        /// <summary>The date and time when the temporaryAccessPass was created.</summary>
        public global::System.DateTime? CreatedDateTime { get => this._createdDateTime; set => this._createdDateTime = value; }

        /// <summary>Read-only.</summary>
        public string Id { get; set; }

        /// <summary>Backing field for <see cref="IsUsable" /> property.</summary>
        private bool? _isUsable;

        /// <summary>
        /// The state of the authentication method that indicates whether it's currently usable by the user.
        /// </summary>
        public bool? IsUsable { get => this._isUsable; set => this._isUsable = value; }

        /// <summary>Backing field for <see cref="IsUsableOnce" /> property.</summary>
        private bool? _isUsableOnce;

        /// <summary>
        /// Determines whether the pass is limited to a one time use. If true, the pass can be used once; if false, the pass can be
        /// used multiple times within the temporaryAccessPass lifetime.
        /// </summary>
        public bool? IsUsableOnce { get => this._isUsableOnce; set => this._isUsableOnce = value; }

        /// <summary>Backing field for <see cref="LifetimeInMinutes" /> property.</summary>
        private int? _lifetimeInMinutes;

        /// <summary>
        /// The lifetime of the temporaryAccessPass in minutes starting at startDateTime. Minimum 10, Maximum 43200 (equivalent to
        /// 30 days).
        /// </summary>
        public int? LifetimeInMinutes { get => this._lifetimeInMinutes; set => this._lifetimeInMinutes = value; }

        /// <summary>Backing field for <see cref="MethodUsabilityReason" /> property.</summary>
        private string _methodUsabilityReason;

        /// <summary>
        /// Details about usability state (isUsable). Reasons can include: enabledByPolicy, disabledByPolicy, expired, notYetValid,
        /// oneTimeUsed.
        /// </summary>
        public string MethodUsabilityReason { get => this._methodUsabilityReason; set => this._methodUsabilityReason = value; }

        /// <summary>Backing field for <see cref="StartDateTime" /> property.</summary>
        private global::System.DateTime? _startDateTime;

        /// <summary>The date and time when the temporaryAccessPass becomes available to use.</summary>
        public global::System.DateTime? StartDateTime { get => this._startDateTime; set => this._startDateTime = value; }

        /// <summary>Backing field for <see cref="TemporaryAccessPass" /> property.</summary>
        private string _temporaryAccessPass;

        /// <summary>
        /// The temporaryAccessPass used to authenticate. Returned only on creation of a new temporaryAccessPass; returned as NULL
        /// with GET.
        /// </summary>
        public string TemporaryAccessPass { get => this._temporaryAccessPass; set => this._temporaryAccessPass = value; }

    }
}