// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>activityHistoryItem</summary>
    public partial class MgActivityHistoryItem
    {

        /// <summary>Backing field for <see cref="ActiveDurationSeconds" /> property.</summary>
        private int? _activeDurationSeconds;

        /// <summary>
        /// Optional. The duration of active user engagement. if not supplied, this is calculated from the startedDateTime and lastActiveDateTime.
        /// </summary>
        public int? ActiveDurationSeconds { get => this._activeDurationSeconds; set => this._activeDurationSeconds = value; }

        /// <summary>Backing field for <see cref="Activity" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgUserActivity _activity;

        /// <summary>userActivity</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgUserActivity Activity { get => (this._activity = this._activity ?? new Microsoft.Graph.PowerShell.Users.Models.MgUserActivity()); set => this._activity = value; }

        /// <summary>Backing field for <see cref="CreatedDateTime" /> property.</summary>
        private global::System.DateTime? _createdDateTime;

        /// <summary>Set by the server. DateTime in UTC when the object was created on the server.</summary>
        public global::System.DateTime? CreatedDateTime { get => this._createdDateTime; set => this._createdDateTime = value; }

        /// <summary>Backing field for <see cref="ExpirationDateTime" /> property.</summary>
        private global::System.DateTime? _expirationDateTime;

        /// <summary>
        /// Optional. UTC DateTime when the historyItem will undergo hard-delete. Can be set by the client.
        /// </summary>
        public global::System.DateTime? ExpirationDateTime { get => this._expirationDateTime; set => this._expirationDateTime = value; }

        /// <summary>Read-only.</summary>
        public string Id { get; set; }

        /// <summary>Backing field for <see cref="LastActiveDateTime" /> property.</summary>
        private global::System.DateTime? _lastActiveDateTime;

        /// <summary>
        /// Optional. UTC DateTime when the historyItem (activity session) was last understood as active or finished - if null, historyItem
        /// status should be Ongoing.
        /// </summary>
        public global::System.DateTime? LastActiveDateTime { get => this._lastActiveDateTime; set => this._lastActiveDateTime = value; }

        /// <summary>Backing field for <see cref="LastModifiedDateTime" /> property.</summary>
        private global::System.DateTime? _lastModifiedDateTime;

        /// <summary>Set by the server. DateTime in UTC when the object was modified on the server.</summary>
        public global::System.DateTime? LastModifiedDateTime { get => this._lastModifiedDateTime; set => this._lastModifiedDateTime = value; }

        /// <summary>Backing field for <see cref="StartedDateTime" /> property.</summary>
        private global::System.DateTime? _startedDateTime;

        /// <summary>
        /// Required. UTC DateTime when the historyItem (activity session) was started. Required for timeline history.
        /// </summary>
        public global::System.DateTime? StartedDateTime { get => this._startedDateTime; set => this._startedDateTime = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private string _status;

        /// <summary>status</summary>
        public string Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="UserTimezone" /> property.</summary>
        private string _userTimezone;

        /// <summary>
        /// Optional. The timezone in which the user's device used to generate the activity was located at activity creation time.
        /// Values supplied as Olson IDs in order to support cross-platform representation.
        /// </summary>
        public string UserTimezone { get => this._userTimezone; set => this._userTimezone = value; }

    }
}