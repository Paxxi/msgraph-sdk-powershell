// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>messageRulePredicates</summary>
    public partial class MgMessageRulePredicates
    {

        /// <summary>Backing field for <see cref="BodyContains" /> property.</summary>
        private string[] _bodyContains;

        /// <summary>
        /// Represents the strings that should appear in the body of an incoming message in order for the condition or exception to
        /// apply.
        /// </summary>
        public string[] BodyContains { get => this._bodyContains; set => this._bodyContains = value; }

        /// <summary>Backing field for <see cref="BodyOrSubjectContains" /> property.</summary>
        private string[] _bodyOrSubjectContains;

        /// <summary>
        /// Represents the strings that should appear in the body or subject of an incoming message in order for the condition or
        /// exception to apply.
        /// </summary>
        public string[] BodyOrSubjectContains { get => this._bodyOrSubjectContains; set => this._bodyOrSubjectContains = value; }

        /// <summary>Backing field for <see cref="Categories" /> property.</summary>
        private string[] _categories;

        /// <summary>
        /// Represents the categories that an incoming message should be labeled with in order for the condition or exception to apply.
        /// </summary>
        public string[] Categories { get => this._categories; set => this._categories = value; }

        /// <summary>Backing field for <see cref="FromAddresses" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgRecipient[] _fromAddresses;

        /// <summary>
        /// Represents the specific sender email addresses of an incoming message in order for the condition or exception to apply.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgRecipient[] FromAddresses { get => this._fromAddresses; set => this._fromAddresses = value; }

        /// <summary>Backing field for <see cref="HasAttachments" /> property.</summary>
        private bool? _hasAttachments;

        /// <summary>
        /// Indicates whether an incoming message must have attachments in order for the condition or exception to apply.
        /// </summary>
        public bool? HasAttachments { get => this._hasAttachments; set => this._hasAttachments = value; }

        /// <summary>Backing field for <see cref="HeaderContains" /> property.</summary>
        private string[] _headerContains;

        /// <summary>
        /// Represents the strings that appear in the headers of an incoming message in order for the condition or exception to apply.
        /// </summary>
        public string[] HeaderContains { get => this._headerContains; set => this._headerContains = value; }

        /// <summary>Backing field for <see cref="Importance" /> property.</summary>
        private string _importance;

        /// <summary>importance</summary>
        public string Importance { get => this._importance; set => this._importance = value; }

        /// <summary>Backing field for <see cref="IsApprovalRequest" /> property.</summary>
        private bool? _isApprovalRequest;

        /// <summary>
        /// Indicates whether an incoming message must be an approval request in order for the condition or exception to apply.
        /// </summary>
        public bool? IsApprovalRequest { get => this._isApprovalRequest; set => this._isApprovalRequest = value; }

        /// <summary>Backing field for <see cref="IsAutomaticForward" /> property.</summary>
        private bool? _isAutomaticForward;

        /// <summary>
        /// Indicates whether an incoming message must be automatically forwarded in order for the condition or exception to apply.
        /// </summary>
        public bool? IsAutomaticForward { get => this._isAutomaticForward; set => this._isAutomaticForward = value; }

        /// <summary>Backing field for <see cref="IsAutomaticReply" /> property.</summary>
        private bool? _isAutomaticReply;

        /// <summary>
        /// Indicates whether an incoming message must be an auto reply in order for the condition or exception to apply.
        /// </summary>
        public bool? IsAutomaticReply { get => this._isAutomaticReply; set => this._isAutomaticReply = value; }

        /// <summary>Backing field for <see cref="IsEncrypted" /> property.</summary>
        private bool? _isEncrypted;

        /// <summary>
        /// Indicates whether an incoming message must be encrypted in order for the condition or exception to apply.
        /// </summary>
        public bool? IsEncrypted { get => this._isEncrypted; set => this._isEncrypted = value; }

        /// <summary>Backing field for <see cref="IsMeetingRequest" /> property.</summary>
        private bool? _isMeetingRequest;

        /// <summary>
        /// Indicates whether an incoming message must be a meeting request in order for the condition or exception to apply.
        /// </summary>
        public bool? IsMeetingRequest { get => this._isMeetingRequest; set => this._isMeetingRequest = value; }

        /// <summary>Backing field for <see cref="IsMeetingResponse" /> property.</summary>
        private bool? _isMeetingResponse;

        /// <summary>
        /// Indicates whether an incoming message must be a meeting response in order for the condition or exception to apply.
        /// </summary>
        public bool? IsMeetingResponse { get => this._isMeetingResponse; set => this._isMeetingResponse = value; }

        /// <summary>Backing field for <see cref="IsNonDeliveryReport" /> property.</summary>
        private bool? _isNonDeliveryReport;

        /// <summary>
        /// Indicates whether an incoming message must be a non-delivery report in order for the condition or exception to apply.
        /// </summary>
        public bool? IsNonDeliveryReport { get => this._isNonDeliveryReport; set => this._isNonDeliveryReport = value; }

        /// <summary>Backing field for <see cref="IsPermissionControlled" /> property.</summary>
        private bool? _isPermissionControlled;

        /// <summary>
        /// Indicates whether an incoming message must be permission controlled (RMS-protected) in order for the condition or exception
        /// to apply.
        /// </summary>
        public bool? IsPermissionControlled { get => this._isPermissionControlled; set => this._isPermissionControlled = value; }

        /// <summary>Backing field for <see cref="IsReadReceipt" /> property.</summary>
        private bool? _isReadReceipt;

        /// <summary>
        /// Indicates whether an incoming message must be a read receipt in order for the condition or exception to apply.
        /// </summary>
        public bool? IsReadReceipt { get => this._isReadReceipt; set => this._isReadReceipt = value; }

        /// <summary>Backing field for <see cref="IsSigned" /> property.</summary>
        private bool? _isSigned;

        /// <summary>
        /// Indicates whether an incoming message must be S/MIME-signed in order for the condition or exception to apply.
        /// </summary>
        public bool? IsSigned { get => this._isSigned; set => this._isSigned = value; }

        /// <summary>Backing field for <see cref="IsVoicemail" /> property.</summary>
        private bool? _isVoicemail;

        /// <summary>
        /// Indicates whether an incoming message must be a voice mail in order for the condition or exception to apply.
        /// </summary>
        public bool? IsVoicemail { get => this._isVoicemail; set => this._isVoicemail = value; }

        /// <summary>Backing field for <see cref="MessageActionFlag" /> property.</summary>
        private string _messageActionFlag;

        /// <summary>messageActionFlag</summary>
        public string MessageActionFlag { get => this._messageActionFlag; set => this._messageActionFlag = value; }

        /// <summary>Backing field for <see cref="NotSentToMe" /> property.</summary>
        private bool? _notSentToMe;

        /// <summary>
        /// Indicates whether the owner of the mailbox must not be a recipient of an incoming message in order for the condition or
        /// exception to apply.
        /// </summary>
        public bool? NotSentToMe { get => this._notSentToMe; set => this._notSentToMe = value; }

        /// <summary>Backing field for <see cref="RecipientContains" /> property.</summary>
        private string[] _recipientContains;

        /// <summary>
        /// Represents the strings that appear in either the toRecipients or ccRecipients properties of an incoming message in order
        /// for the condition or exception to apply.
        /// </summary>
        public string[] RecipientContains { get => this._recipientContains; set => this._recipientContains = value; }

        /// <summary>Backing field for <see cref="SenderContains" /> property.</summary>
        private string[] _senderContains;

        /// <summary>
        /// Represents the strings that appear in the from property of an incoming message in order for the condition or exception
        /// to apply.
        /// </summary>
        public string[] SenderContains { get => this._senderContains; set => this._senderContains = value; }

        /// <summary>Backing field for <see cref="Sensitivity" /> property.</summary>
        private string _sensitivity;

        /// <summary>sensitivity</summary>
        public string Sensitivity { get => this._sensitivity; set => this._sensitivity = value; }

        /// <summary>Backing field for <see cref="SentCcMe" /> property.</summary>
        private bool? _sentCcMe;

        /// <summary>
        /// Indicates whether the owner of the mailbox must be in the ccRecipients property of an incoming message in order for the
        /// condition or exception to apply.
        /// </summary>
        public bool? SentCcMe { get => this._sentCcMe; set => this._sentCcMe = value; }

        /// <summary>Backing field for <see cref="SentOnlyToMe" /> property.</summary>
        private bool? _sentOnlyToMe;

        /// <summary>
        /// Indicates whether the owner of the mailbox must be the only recipient in an incoming message in order for the condition
        /// or exception to apply.
        /// </summary>
        public bool? SentOnlyToMe { get => this._sentOnlyToMe; set => this._sentOnlyToMe = value; }

        /// <summary>Backing field for <see cref="SentToAddresses" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgRecipient[] _sentToAddresses;

        /// <summary>
        /// Represents the email addresses that an incoming message must have been sent to in order for the condition or exception
        /// to apply.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgRecipient[] SentToAddresses { get => this._sentToAddresses; set => this._sentToAddresses = value; }

        /// <summary>Backing field for <see cref="SentToMe" /> property.</summary>
        private bool? _sentToMe;

        /// <summary>
        /// Indicates whether the owner of the mailbox must be in the toRecipients property of an incoming message in order for the
        /// condition or exception to apply.
        /// </summary>
        public bool? SentToMe { get => this._sentToMe; set => this._sentToMe = value; }

        /// <summary>Backing field for <see cref="SentToOrCcMe" /> property.</summary>
        private bool? _sentToOrCcMe;

        /// <summary>
        /// Indicates whether the owner of the mailbox must be in either a toRecipients or ccRecipients property of an incoming message
        /// in order for the condition or exception to apply.
        /// </summary>
        public bool? SentToOrCcMe { get => this._sentToOrCcMe; set => this._sentToOrCcMe = value; }

        /// <summary>Backing field for <see cref="SubjectContains" /> property.</summary>
        private string[] _subjectContains;

        /// <summary>
        /// Represents the strings that appear in the subject of an incoming message in order for the condition or exception to apply.
        /// </summary>
        public string[] SubjectContains { get => this._subjectContains; set => this._subjectContains = value; }

        /// <summary>Backing field for <see cref="WithinSizeRange" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgSizeRange _withinSizeRange;

        /// <summary>sizeRange</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgSizeRange WithinSizeRange { get => (this._withinSizeRange = this._withinSizeRange ?? new Microsoft.Graph.PowerShell.Users.Models.MgSizeRange()); set => this._withinSizeRange = value; }

    }
}