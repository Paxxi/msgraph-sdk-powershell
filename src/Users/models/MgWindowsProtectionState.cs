// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>Device protection status entity.</summary>
    public partial class MgWindowsProtectionState
    {

        /// <summary>Backing field for <see cref="AntiMalwareVersion" /> property.</summary>
        private string _antiMalwareVersion;

        /// <summary>Current anti malware version</summary>
        public string AntiMalwareVersion { get => this._antiMalwareVersion; set => this._antiMalwareVersion = value; }

        /// <summary>Backing field for <see cref="DetectedMalwareState" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgWindowsDeviceMalwareState[] _detectedMalwareState;

        /// <summary>Device malware list</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgWindowsDeviceMalwareState[] DetectedMalwareState { get => this._detectedMalwareState; set => this._detectedMalwareState = value; }

        /// <summary>Backing field for <see cref="DeviceState" /> property.</summary>
        private string _deviceState;

        /// <summary>windowsDeviceHealthState</summary>
        public string DeviceState { get => this._deviceState; set => this._deviceState = value; }

        /// <summary>Backing field for <see cref="EngineVersion" /> property.</summary>
        private string _engineVersion;

        /// <summary>Current endpoint protection engine's version</summary>
        public string EngineVersion { get => this._engineVersion; set => this._engineVersion = value; }

        /// <summary>Backing field for <see cref="FullScanOverdue" /> property.</summary>
        private bool? _fullScanOverdue;

        /// <summary>Full scan overdue or not?</summary>
        public bool? FullScanOverdue { get => this._fullScanOverdue; set => this._fullScanOverdue = value; }

        /// <summary>Backing field for <see cref="FullScanRequired" /> property.</summary>
        private bool? _fullScanRequired;

        /// <summary>Full scan required or not?</summary>
        public bool? FullScanRequired { get => this._fullScanRequired; set => this._fullScanRequired = value; }

        /// <summary>Read-only.</summary>
        public string Id { get; set; }

        /// <summary>Backing field for <see cref="IsVirtualMachine" /> property.</summary>
        private bool? _isVirtualMachine;

        /// <summary>Indicates whether the device is a virtual machine.</summary>
        public bool? IsVirtualMachine { get => this._isVirtualMachine; set => this._isVirtualMachine = value; }

        /// <summary>Backing field for <see cref="LastFullScanDateTime" /> property.</summary>
        private global::System.DateTime? _lastFullScanDateTime;

        /// <summary>Last quick scan datetime</summary>
        public global::System.DateTime? LastFullScanDateTime { get => this._lastFullScanDateTime; set => this._lastFullScanDateTime = value; }

        /// <summary>Backing field for <see cref="LastFullScanSignatureVersion" /> property.</summary>
        private string _lastFullScanSignatureVersion;

        /// <summary>Last full scan signature version</summary>
        public string LastFullScanSignatureVersion { get => this._lastFullScanSignatureVersion; set => this._lastFullScanSignatureVersion = value; }

        /// <summary>Backing field for <see cref="LastQuickScanDateTime" /> property.</summary>
        private global::System.DateTime? _lastQuickScanDateTime;

        /// <summary>Last quick scan datetime</summary>
        public global::System.DateTime? LastQuickScanDateTime { get => this._lastQuickScanDateTime; set => this._lastQuickScanDateTime = value; }

        /// <summary>Backing field for <see cref="LastQuickScanSignatureVersion" /> property.</summary>
        private string _lastQuickScanSignatureVersion;

        /// <summary>Last quick scan signature version</summary>
        public string LastQuickScanSignatureVersion { get => this._lastQuickScanSignatureVersion; set => this._lastQuickScanSignatureVersion = value; }

        /// <summary>Backing field for <see cref="LastReportedDateTime" /> property.</summary>
        private global::System.DateTime? _lastReportedDateTime;

        /// <summary>Last device health status reported time</summary>
        public global::System.DateTime? LastReportedDateTime { get => this._lastReportedDateTime; set => this._lastReportedDateTime = value; }

        /// <summary>Backing field for <see cref="MalwareProtectionEnabled" /> property.</summary>
        private bool? _malwareProtectionEnabled;

        /// <summary>Anti malware is enabled or not</summary>
        public bool? MalwareProtectionEnabled { get => this._malwareProtectionEnabled; set => this._malwareProtectionEnabled = value; }

        /// <summary>Backing field for <see cref="NetworkInspectionSystemEnabled" /> property.</summary>
        private bool? _networkInspectionSystemEnabled;

        /// <summary>Network inspection system enabled or not?</summary>
        public bool? NetworkInspectionSystemEnabled { get => this._networkInspectionSystemEnabled; set => this._networkInspectionSystemEnabled = value; }

        /// <summary>Backing field for <see cref="ProductStatus" /> property.</summary>
        private string _productStatus;

        /// <summary>windowsDefenderProductStatus</summary>
        public string ProductStatus { get => this._productStatus; set => this._productStatus = value; }

        /// <summary>Backing field for <see cref="QuickScanOverdue" /> property.</summary>
        private bool? _quickScanOverdue;

        /// <summary>Quick scan overdue or not?</summary>
        public bool? QuickScanOverdue { get => this._quickScanOverdue; set => this._quickScanOverdue = value; }

        /// <summary>Backing field for <see cref="RealTimeProtectionEnabled" /> property.</summary>
        private bool? _realTimeProtectionEnabled;

        /// <summary>Real time protection is enabled or not?</summary>
        public bool? RealTimeProtectionEnabled { get => this._realTimeProtectionEnabled; set => this._realTimeProtectionEnabled = value; }

        /// <summary>Backing field for <see cref="RebootRequired" /> property.</summary>
        private bool? _rebootRequired;

        /// <summary>Reboot required or not?</summary>
        public bool? RebootRequired { get => this._rebootRequired; set => this._rebootRequired = value; }

        /// <summary>Backing field for <see cref="SignatureUpdateOverdue" /> property.</summary>
        private bool? _signatureUpdateOverdue;

        /// <summary>Signature out of date or not?</summary>
        public bool? SignatureUpdateOverdue { get => this._signatureUpdateOverdue; set => this._signatureUpdateOverdue = value; }

        /// <summary>Backing field for <see cref="SignatureVersion" /> property.</summary>
        private string _signatureVersion;

        /// <summary>Current malware definitions version</summary>
        public string SignatureVersion { get => this._signatureVersion; set => this._signatureVersion = value; }

        /// <summary>Backing field for <see cref="TamperProtectionEnabled" /> property.</summary>
        private bool? _tamperProtectionEnabled;

        /// <summary>Indicates whether the Windows Defender tamper protection feature is enabled.</summary>
        public bool? TamperProtectionEnabled { get => this._tamperProtectionEnabled; set => this._tamperProtectionEnabled = value; }

    }
}