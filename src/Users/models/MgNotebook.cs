// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>notebook</summary>
    public partial class MgNotebook
    {

        /// <summary>identitySet</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgIdentitySet CreatedBy { get; set; }

        /// <summary>
        /// The date and time when the page was created. The timestamp represents date and time information using ISO 8601 format
        /// and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
        /// </summary>
        public global::System.DateTime? CreatedDateTime { get; set; }

        /// <summary>The name of the notebook.</summary>
        public string DisplayName { get; set; }

        /// <summary>Read-only.</summary>
        public string Id { get; set; }

        /// <summary>Backing field for <see cref="IsDefault" /> property.</summary>
        private bool? _isDefault;

        /// <summary>Indicates whether this is the user's default notebook. Read-only.</summary>
        public bool? IsDefault { get => this._isDefault; set => this._isDefault = value; }

        /// <summary>Backing field for <see cref="IsShared" /> property.</summary>
        private bool? _isShared;

        /// <summary>
        /// Indicates whether the notebook is shared. If true, the contents of the notebook can be seen by people other than the owner.
        /// Read-only.
        /// </summary>
        public bool? IsShared { get => this._isShared; set => this._isShared = value; }

        /// <summary>identitySet</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgIdentitySet LastModifiedBy { get; set; }

        /// <summary>
        /// The date and time when the notebook was last modified. The timestamp represents date and time information using ISO 8601
        /// format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
        /// </summary>
        public global::System.DateTime? LastModifiedDateTime { get; set; }

        /// <summary>Backing field for <see cref="Links" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgNotebookLinks _links;

        /// <summary>notebookLinks</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgNotebookLinks Links { get => (this._links = this._links ?? new Microsoft.Graph.PowerShell.Users.Models.MgNotebookLinks()); set => this._links = value; }

        /// <summary>Backing field for <see cref="SectionGroups" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgSectionGroup[] _sectionGroups;

        /// <summary>The section groups in the notebook. Read-only. Nullable.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgSectionGroup[] SectionGroups { get => this._sectionGroups; set => this._sectionGroups = value; }

        /// <summary>Backing field for <see cref="SectionGroupsUrl" /> property.</summary>
        private string _sectionGroupsUrl;

        /// <summary>
        /// The URL for the sectionGroups navigation property, which returns all the section groups in the notebook. Read-only.
        /// </summary>
        public string SectionGroupsUrl { get => this._sectionGroupsUrl; set => this._sectionGroupsUrl = value; }

        /// <summary>Backing field for <see cref="Sections" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgOnenoteSection[] _sections;

        /// <summary>The sections in the notebook. Read-only. Nullable.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgOnenoteSection[] Sections { get => this._sections; set => this._sections = value; }

        /// <summary>Backing field for <see cref="SectionsUrl" /> property.</summary>
        private string _sectionsUrl;

        /// <summary>
        /// The URL for the sections navigation property, which returns all the sections in the notebook. Read-only.
        /// </summary>
        public string SectionsUrl { get => this._sectionsUrl; set => this._sectionsUrl = value; }

        /// <summary>The endpoint where you can get details about the page. Read-only.</summary>
        public string Self { get; set; }

        /// <summary>Backing field for <see cref="UserRole" /> property.</summary>
        private string _userRole;

        /// <summary>onenoteUserRole</summary>
        public string UserRole { get => this._userRole; set => this._userRole = value; }

    }
}