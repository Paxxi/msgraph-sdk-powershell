// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>subscription</summary>
    public partial class MgSubscription
    {

        /// <summary>Backing field for <see cref="ApplicationId" /> property.</summary>
        private string _applicationId;

        /// <summary>Identifier of the application used to create the subscription. Read-only.</summary>
        public string ApplicationId { get => this._applicationId; set => this._applicationId = value; }

        /// <summary>Backing field for <see cref="ChangeType" /> property.</summary>
        private string _changeType;

        /// <summary>
        /// Indicates the type of change in the subscribed resource that will raise a change notification. The supported values are:
        /// created, updated, deleted. Multiple values can be combined using a comma-separated list. Required. Note: Drive root item
        /// and list change notifications support only the updated changeType. User and group change notifications support updated
        /// and deleted changeType.
        /// </summary>
        public string ChangeType { get => this._changeType; set => this._changeType = value; }

        /// <summary>Backing field for <see cref="ClientState" /> property.</summary>
        private string _clientState;

        /// <summary>
        /// Specifies the value of the clientState property sent by the service in each change notification. The maximum length is
        /// 255 characters. The client can check that the change notification came from the service by comparing the value of the
        /// clientState property sent with the subscription with the value of the clientState property received with each change notification.
        /// Optional.
        /// </summary>
        public string ClientState { get => this._clientState; set => this._clientState = value; }

        /// <summary>Backing field for <see cref="CreatorId" /> property.</summary>
        private string _creatorId;

        /// <summary>
        /// Identifier of the user or service principal that created the subscription. If the app used delegated permissions to create
        /// the subscription, this field contains the ID of the signed-in user the app called on behalf of. If the app used application
        /// permissions, this field contains the ID of the service principal corresponding to the app. Read-only.
        /// </summary>
        public string CreatorId { get => this._creatorId; set => this._creatorId = value; }

        /// <summary>Backing field for <see cref="EncryptionCertificate" /> property.</summary>
        private string _encryptionCertificate;

        /// <summary>
        /// A base64-encoded representation of a certificate with a public key used to encrypt resource data in change notifications.
        /// Optional. Required when includeResourceData is true.
        /// </summary>
        public string EncryptionCertificate { get => this._encryptionCertificate; set => this._encryptionCertificate = value; }

        /// <summary>Backing field for <see cref="EncryptionCertificateId" /> property.</summary>
        private string _encryptionCertificateId;

        /// <summary>
        /// A custom app-provided identifier to help identify the certificate needed to decrypt resource data. Optional. Required
        /// when includeResourceData is true.
        /// </summary>
        public string EncryptionCertificateId { get => this._encryptionCertificateId; set => this._encryptionCertificateId = value; }

        /// <summary>Backing field for <see cref="ExpirationDateTime" /> property.</summary>
        private global::System.DateTime? _expirationDateTime;

        /// <summary>
        /// Specifies the date and time when the webhook subscription expires. The time is in UTC, and can be an amount of time from
        /// subscription creation that varies for the resource subscribed to. See the table below for maximum supported subscription
        /// length of time. Required.
        /// </summary>
        public global::System.DateTime? ExpirationDateTime { get => this._expirationDateTime; set => this._expirationDateTime = value; }

        /// <summary>Read-only.</summary>
        public string Id { get; set; }

        /// <summary>Backing field for <see cref="IncludeResourceData" /> property.</summary>
        private bool? _includeResourceData;

        /// <summary>
        /// When set to true, change notifications include resource data (such as content of a chat message). Optional.
        /// </summary>
        public bool? IncludeResourceData { get => this._includeResourceData; set => this._includeResourceData = value; }

        /// <summary>Backing field for <see cref="LatestSupportedTlsVersion" /> property.</summary>
        private string _latestSupportedTlsVersion;

        /// <summary>
        /// Specifies the latest version of Transport Layer Security (TLS) that the notification endpoint, specified by notificationUrl,
        /// supports. The possible values are: v1_0, v1_1, v1_2, v1_3. For subscribers whose notification endpoint supports a version
        /// lower than the currently recommended version (TLS 1.2), specifying this property by a set timeline allows them to temporarily
        /// use their deprecated version of TLS before completing their upgrade to TLS 1.2. For these subscribers, not setting this
        /// property per the timeline would result in subscription operations failing. For subscribers whose notification endpoint
        /// already supports TLS 1.2, setting this property is optional. In such cases, Microsoft Graph defaults the property to v1_2.
        /// </summary>
        public string LatestSupportedTlsVersion { get => this._latestSupportedTlsVersion; set => this._latestSupportedTlsVersion = value; }

        /// <summary>Backing field for <see cref="LifecycleNotificationUrl" /> property.</summary>
        private string _lifecycleNotificationUrl;

        /// <summary>
        /// The URL of the endpoint that receives lifecycle notifications, including subscriptionRemoved and missed notifications.
        /// This URL must make use of the HTTPS protocol. Optional. Read more about how Outlook resources use lifecycle notifications.
        /// </summary>
        public string LifecycleNotificationUrl { get => this._lifecycleNotificationUrl; set => this._lifecycleNotificationUrl = value; }

        /// <summary>Backing field for <see cref="NotificationContentType" /> property.</summary>
        private string _notificationContentType;

        /// <summary>
        /// Desired content-type for MS Graph change notifications for supported resource types. The default content-type is the 'application/json'
        /// content-type.
        /// </summary>
        public string NotificationContentType { get => this._notificationContentType; set => this._notificationContentType = value; }

        /// <summary>Backing field for <see cref="NotificationQueryOptions" /> property.</summary>
        private string _notificationQueryOptions;

        /// <summary>
        /// OData Query Options for specifying value for the targeting resource. Clients receive notifications when resource reaches
        /// the state matching the query options provided here. With this new property in the subscription creation payload along
        /// with all existing properties, Webhooks will deliver notifications whenever a resource reaches the desired state mentioned
        /// in the notificationQueryOptions property eg when the print job is completed, when a print job resource isFetchable property
        /// value becomes true etc.
        /// </summary>
        public string NotificationQueryOptions { get => this._notificationQueryOptions; set => this._notificationQueryOptions = value; }

        /// <summary>Backing field for <see cref="NotificationUrl" /> property.</summary>
        private string _notificationUrl;

        /// <summary>
        /// The URL of the endpoint that receives the change notifications. This URL must make use of the HTTPS protocol. Required.
        /// </summary>
        public string NotificationUrl { get => this._notificationUrl; set => this._notificationUrl = value; }

        /// <summary>Backing field for <see cref="Resource" /> property.</summary>
        private string _resource;

        /// <summary>
        /// Specifies the resource that will be monitored for changes. Do not include the base URL (https://graph.microsoft.com/beta/).
        /// See the possible resource path values for each supported resource. Required.
        /// </summary>
        public string Resource { get => this._resource; set => this._resource = value; }

    }
}