// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>permission</summary>
    public partial class MgPermission
    {

        /// <summary>Backing field for <see cref="ExpirationDateTime" /> property.</summary>
        private global::System.DateTime? _expirationDateTime;

        /// <summary>
        /// A format of yyyy-MM-ddTHH:mm:ssZ of DateTimeOffset indicates the expiration time of the permission. DateTime.MinValue
        /// indicates there is no expiration set for this permission. Optional.
        /// </summary>
        public global::System.DateTime? ExpirationDateTime { get => this._expirationDateTime; set => this._expirationDateTime = value; }

        /// <summary>Backing field for <see cref="GrantedTo" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgIdentitySet _grantedTo;

        /// <summary>identitySet</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgIdentitySet GrantedTo { get => (this._grantedTo = this._grantedTo ?? new Microsoft.Graph.PowerShell.Users.Models.MgIdentitySet()); set => this._grantedTo = value; }

        /// <summary>Backing field for <see cref="GrantedToIdentities" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgIdentitySet[] _grantedToIdentities;

        /// <summary>
        /// For link type permissions, the details of the users to whom permission was granted. Read-only.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgIdentitySet[] GrantedToIdentities { get => this._grantedToIdentities; set => this._grantedToIdentities = value; }

        /// <summary>Backing field for <see cref="HasPassword" /> property.</summary>
        private bool? _hasPassword;

        /// <summary>
        /// This indicates whether password is set for this permission, it's only showing in response. Optional and Read-only and
        /// for OneDrive Personal only.
        /// </summary>
        public bool? HasPassword { get => this._hasPassword; set => this._hasPassword = value; }

        /// <summary>Read-only.</summary>
        public string Id { get; set; }

        /// <summary>Backing field for <see cref="InheritedFrom" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgItemReference _inheritedFrom;

        /// <summary>itemReference</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgItemReference InheritedFrom { get => (this._inheritedFrom = this._inheritedFrom ?? new Microsoft.Graph.PowerShell.Users.Models.MgItemReference()); set => this._inheritedFrom = value; }

        /// <summary>Backing field for <see cref="Invitation" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgSharingInvitation _invitation;

        /// <summary>sharingInvitation</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgSharingInvitation Invitation { get => (this._invitation = this._invitation ?? new Microsoft.Graph.PowerShell.Users.Models.MgSharingInvitation()); set => this._invitation = value; }

        /// <summary>Backing field for <see cref="Link" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgSharingLink _link;

        /// <summary>sharingLink</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgSharingLink Link { get => (this._link = this._link ?? new Microsoft.Graph.PowerShell.Users.Models.MgSharingLink()); set => this._link = value; }

        /// <summary>Backing field for <see cref="Roles" /> property.</summary>
        private string[] _roles;

        /// <summary>
        /// The type of permission, e.g. read. See below for the full list of roles. Read-only.
        /// </summary>
        public string[] Roles { get => this._roles; set => this._roles = value; }

        /// <summary>Backing field for <see cref="ShareId" /> property.</summary>
        private string _shareId;

        /// <summary>
        /// A unique token that can be used to access this shared item via the [shares API][]. Read-only.
        /// </summary>
        public string ShareId { get => this._shareId; set => this._shareId = value; }

    }
}