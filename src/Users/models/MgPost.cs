// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>post</summary>
    public partial class MgPost
    {

        /// <summary>Backing field for <see cref="Attachments" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgAttachment[] _attachments;

        /// <summary>
        /// The collection of fileAttachment, itemAttachment, and referenceAttachment attachments for the post. Read-only. Nullable.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgAttachment[] Attachments { get => this._attachments; set => this._attachments = value; }

        /// <summary>Backing field for <see cref="Body" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgItemBody _body;

        /// <summary>itemBody</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgItemBody Body { get => (this._body = this._body ?? new Microsoft.Graph.PowerShell.Users.Models.MgItemBody()); set => this._body = value; }

        /// <summary>The categories associated with the item</summary>
        public string[] Categories { get; set; }

        /// <summary>
        /// Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to
        /// apply changes to the correct version of the object. Read-only.
        /// </summary>
        public string ChangeKey { get; set; }

        /// <summary>Backing field for <see cref="ConversationId" /> property.</summary>
        private string _conversationId;

        /// <summary>Unique ID of the conversation. Read-only.</summary>
        public string ConversationId { get => this._conversationId; set => this._conversationId = value; }

        /// <summary>Backing field for <see cref="ConversationThreadId" /> property.</summary>
        private string _conversationThreadId;

        /// <summary>Unique ID of the conversation thread. Read-only.</summary>
        public string ConversationThreadId { get => this._conversationThreadId; set => this._conversationThreadId = value; }

        /// <summary>
        /// The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example,
        /// midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        /// </summary>
        public global::System.DateTime? CreatedDateTime { get; set; }

        /// <summary>Backing field for <see cref="Extensions" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgExtension[] _extensions;

        /// <summary>The collection of open extensions defined for the post. Read-only. Nullable.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgExtension[] Extensions { get => this._extensions; set => this._extensions = value; }

        /// <summary>Backing field for <see cref="From" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgRecipient _from;

        /// <summary>recipient</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgRecipient From { get => (this._from = this._from ?? new Microsoft.Graph.PowerShell.Users.Models.MgRecipient()); set => this._from = value; }

        /// <summary>Backing field for <see cref="HasAttachments" /> property.</summary>
        private bool? _hasAttachments;

        /// <summary>
        /// Indicates whether the post has at least one attachment. This is a default property.
        /// </summary>
        public bool? HasAttachments { get => this._hasAttachments; set => this._hasAttachments = value; }

        /// <summary>Read-only.</summary>
        public string Id { get; set; }

        /// <summary>Backing field for <see cref="Importance" /> property.</summary>
        private string _importance;

        /// <summary>importance</summary>
        public string Importance { get => this._importance; set => this._importance = value; }

        /// <summary>Backing field for <see cref="InReplyTo" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgPost _inReplyTo;

        /// <summary>post</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgPost InReplyTo { get => (this._inReplyTo = this._inReplyTo ?? new Microsoft.Graph.PowerShell.Users.Models.MgPost()); set => this._inReplyTo = value; }

        /// <summary>
        /// The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example,
        /// midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        /// </summary>
        public global::System.DateTime? LastModifiedDateTime { get; set; }

        /// <summary>Backing field for <see cref="Mentions" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgMention[] _mentions;

        public Microsoft.Graph.PowerShell.Users.Models.MgMention[] Mentions { get => this._mentions; set => this._mentions = value; }

        /// <summary>Backing field for <see cref="MultiValueExtendedProperties" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgMultiValueLegacyExtendedProperty[] _multiValueExtendedProperties;

        /// <summary>
        /// The collection of multi-value extended properties defined for the post. Read-only. Nullable.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgMultiValueLegacyExtendedProperty[] MultiValueExtendedProperties { get => this._multiValueExtendedProperties; set => this._multiValueExtendedProperties = value; }

        /// <summary>Backing field for <see cref="NewParticipants" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgRecipient[] _newParticipants;

        /// <summary>Conversation participants that were added to the thread as part of this post.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgRecipient[] NewParticipants { get => this._newParticipants; set => this._newParticipants = value; }

        /// <summary>Backing field for <see cref="ReceivedDateTime" /> property.</summary>
        private global::System.DateTime? _receivedDateTime;

        /// <summary>
        /// Specifies when the post was received. The DateTimeOffset type represents date and time information using ISO 8601 format
        /// and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        /// </summary>
        public global::System.DateTime? ReceivedDateTime { get => this._receivedDateTime; set => this._receivedDateTime = value; }

        /// <summary>Backing field for <see cref="Sender" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgRecipient _sender;

        /// <summary>recipient</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgRecipient Sender { get => (this._sender = this._sender ?? new Microsoft.Graph.PowerShell.Users.Models.MgRecipient()); set => this._sender = value; }

        /// <summary>Backing field for <see cref="SingleValueExtendedProperties" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgSingleValueLegacyExtendedProperty[] _singleValueExtendedProperties;

        /// <summary>
        /// The collection of single-value extended properties defined for the post. Read-only. Nullable.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgSingleValueLegacyExtendedProperty[] SingleValueExtendedProperties { get => this._singleValueExtendedProperties; set => this._singleValueExtendedProperties = value; }

    }
}