// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>chatMessage</summary>
    public partial class MgChatMessage
    {

        /// <summary>Backing field for <see cref="Attachments" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgChatMessageAttachment[] _attachments;

        /// <summary>
        /// Attached files. Attachments are currently read-only â€“ sending attachments is not supported.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgChatMessageAttachment[] Attachments { get => this._attachments; set => this._attachments = value; }

        /// <summary>Backing field for <see cref="Body" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgItemBody _body;

        /// <summary>itemBody</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgItemBody Body { get => (this._body = this._body ?? new Microsoft.Graph.PowerShell.Users.Models.MgItemBody()); set => this._body = value; }

        /// <summary>Backing field for <see cref="ChannelIdentity" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgChannelIdentity _channelIdentity;

        /// <summary>channelIdentity</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgChannelIdentity ChannelIdentity { get => (this._channelIdentity = this._channelIdentity ?? new Microsoft.Graph.PowerShell.Users.Models.MgChannelIdentity()); set => this._channelIdentity = value; }

        /// <summary>Backing field for <see cref="ChatId" /> property.</summary>
        private string _chatId;

        /// <summary>If the message was sent in a chat, represents the identity of the chat.</summary>
        public string ChatId { get => this._chatId; set => this._chatId = value; }

        /// <summary>Backing field for <see cref="CreatedDateTime" /> property.</summary>
        private global::System.DateTime? _createdDateTime;

        /// <summary>Timestamp of when the chat message was created.</summary>
        public global::System.DateTime? CreatedDateTime { get => this._createdDateTime; set => this._createdDateTime = value; }

        /// <summary>Backing field for <see cref="DeletedDateTime" /> property.</summary>
        private global::System.DateTime? _deletedDateTime;

        /// <summary>
        /// Read only. Timestamp at which the chat message was deleted, or null if not deleted.
        /// </summary>
        public global::System.DateTime? DeletedDateTime { get => this._deletedDateTime; set => this._deletedDateTime = value; }

        /// <summary>Backing field for <see cref="Etag" /> property.</summary>
        private string _etag;

        /// <summary>Read-only. Version number of the chat message.</summary>
        public string Etag { get => this._etag; set => this._etag = value; }

        /// <summary>Backing field for <see cref="EventDetail" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgEventMessageDetail _eventDetail;

        /// <summary>eventMessageDetail</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgEventMessageDetail EventDetail { get => (this._eventDetail = this._eventDetail ?? new Microsoft.Graph.PowerShell.Users.Models.MgEventMessageDetail()); set => this._eventDetail = value; }

        /// <summary>Backing field for <see cref="From" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgChatMessageFromIdentitySet _from;

        /// <summary>chatMessageFromIdentitySet</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgChatMessageFromIdentitySet From { get => (this._from = this._from ?? new Microsoft.Graph.PowerShell.Users.Models.MgChatMessageFromIdentitySet()); set => this._from = value; }

        /// <summary>Backing field for <see cref="HostedContents" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgChatMessageHostedContent[] _hostedContents;

        /// <summary>
        /// Content in a message hosted by Microsoft Teams - for example, images or code snippets.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgChatMessageHostedContent[] HostedContents { get => this._hostedContents; set => this._hostedContents = value; }

        /// <summary>Read-only.</summary>
        public string Id { get; set; }

        /// <summary>Backing field for <see cref="Importance" /> property.</summary>
        private string _importance;

        /// <summary>chatMessageImportance</summary>
        public string Importance { get => this._importance; set => this._importance = value; }

        /// <summary>Backing field for <see cref="LastEditedDateTime" /> property.</summary>
        private global::System.DateTime? _lastEditedDateTime;

        /// <summary>
        /// Read only. Timestamp when edits to the chat message were made. Triggers an 'Edited' flag in the Teams UI. If no edits
        /// are made the value is null.
        /// </summary>
        public global::System.DateTime? LastEditedDateTime { get => this._lastEditedDateTime; set => this._lastEditedDateTime = value; }

        /// <summary>Backing field for <see cref="LastModifiedDateTime" /> property.</summary>
        private global::System.DateTime? _lastModifiedDateTime;

        /// <summary>
        /// Read only. Timestamp when the chat message is created (initial setting) or modified, including when a reaction is added
        /// or removed.
        /// </summary>
        public global::System.DateTime? LastModifiedDateTime { get => this._lastModifiedDateTime; set => this._lastModifiedDateTime = value; }

        /// <summary>Backing field for <see cref="Locale" /> property.</summary>
        private string _locale;

        /// <summary>Locale of the chat message set by the client. Always set to en-us.</summary>
        public string Locale { get => this._locale; set => this._locale = value; }

        /// <summary>Backing field for <see cref="Mentions" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgChatMessageMention[] _mentions;

        /// <summary>
        /// List of entities mentioned in the chat message. Currently supports user, bot, team, channel.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgChatMessageMention[] Mentions { get => this._mentions; set => this._mentions = value; }

        /// <summary>Backing field for <see cref="MessageType" /> property.</summary>
        private string _messageType;

        /// <summary>chatMessageType</summary>
        public string MessageType { get => this._messageType; set => this._messageType = value; }

        /// <summary>Backing field for <see cref="PolicyViolation" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgChatMessagePolicyViolation _policyViolation;

        /// <summary>chatMessagePolicyViolation</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgChatMessagePolicyViolation PolicyViolation { get => (this._policyViolation = this._policyViolation ?? new Microsoft.Graph.PowerShell.Users.Models.MgChatMessagePolicyViolation()); set => this._policyViolation = value; }

        /// <summary>Backing field for <see cref="Reactions" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgChatMessageReaction[] _reactions;

        /// <summary>Reactions for this chat message (for example, Like).</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgChatMessageReaction[] Reactions { get => this._reactions; set => this._reactions = value; }

        /// <summary>Backing field for <see cref="Replies" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgChatMessage[] _replies;

        /// <summary>Replies for a specified message.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgChatMessage[] Replies { get => this._replies; set => this._replies = value; }

        /// <summary>Backing field for <see cref="ReplyToId" /> property.</summary>
        private string _replyToId;

        /// <summary>
        /// Read-only. ID of the parent chat message or root chat message of the thread. (Only applies to chat messages in channels,
        /// not chats.)
        /// </summary>
        public string ReplyToId { get => this._replyToId; set => this._replyToId = value; }

        /// <summary>Backing field for <see cref="Subject" /> property.</summary>
        private string _subject;

        /// <summary>The subject of the chat message, in plaintext.</summary>
        public string Subject { get => this._subject; set => this._subject = value; }

        /// <summary>Backing field for <see cref="Summary" /> property.</summary>
        private string _summary;

        /// <summary>
        /// Summary text of the chat message that could be used for push notifications and summary views or fall back views. Only
        /// applies to channel chat messages, not chat messages in a chat.
        /// </summary>
        public string Summary { get => this._summary; set => this._summary = value; }

        /// <summary>Backing field for <see cref="WebUrl" /> property.</summary>
        private string _webUrl;

        /// <summary>Read-only. Link to the message in Microsoft Teams.</summary>
        public string WebUrl { get => this._webUrl; set => this._webUrl = value; }

    }
}