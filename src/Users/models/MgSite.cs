// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>site</summary>
    public partial class MgSite
    {

        /// <summary>Backing field for <see cref="Analytics" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgItemAnalytics _analytics;

        /// <summary>itemAnalytics</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgItemAnalytics Analytics { get => (this._analytics = this._analytics ?? new Microsoft.Graph.PowerShell.Users.Models.MgItemAnalytics()); set => this._analytics = value; }

        /// <summary>Backing field for <see cref="Columns" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgColumnDefinition[] _columns;

        /// <summary>The collection of column definitions reusable across lists under this site.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgColumnDefinition[] Columns { get => this._columns; set => this._columns = value; }

        /// <summary>Backing field for <see cref="ContentTypes" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgContentType[] _contentTypes;

        /// <summary>The collection of content types defined for this site.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgContentType[] ContentTypes { get => this._contentTypes; set => this._contentTypes = value; }

        /// <summary>identitySet</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgIdentitySet CreatedBy { get; set; }

        /// <summary>Represents an Azure Active Directory user object.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgUser CreatedByUser { get; set; }

        /// <summary>Date and time of item creation. Read-only.</summary>
        public global::System.DateTime? CreatedDateTime { get; set; }

        /// <summary>Backing field for <see cref="Deleted" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDeleted _deleted;

        /// <summary>deleted</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDeleted Deleted { get => (this._deleted = this._deleted ?? new Microsoft.Graph.PowerShell.Users.Models.MgDeleted()); set => this._deleted = value; }

        /// <summary>Provides a user-visible description of the item. Optional.</summary>
        public string Description { get; set; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>The full title for the site. Read-only.</summary>
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="Drive" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDrive _drive;

        /// <summary>drive</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDrive Drive { get => (this._drive = this._drive ?? new Microsoft.Graph.PowerShell.Users.Models.MgDrive()); set => this._drive = value; }

        /// <summary>Backing field for <see cref="Drives" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDrive[] _drives;

        /// <summary>The collection of drives (document libraries) under this site.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDrive[] Drives { get => this._drives; set => this._drives = value; }

        /// <summary>ETag for the item. Read-only.</summary>
        public string ETag { get; set; }

        /// <summary>Backing field for <see cref="ExternalColumns" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgColumnDefinition[] _externalColumns;

        /// <summary>
        /// The collection of column definitions available in the site that are referenced from the sites in the parent hierarchy
        /// of the current site.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgColumnDefinition[] ExternalColumns { get => this._externalColumns; set => this._externalColumns = value; }

        /// <summary>Read-only.</summary>
        public string Id { get; set; }

        /// <summary>Backing field for <see cref="Items" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgBaseItem[] _items;

        /// <summary>
        /// Used to address any item contained in this site. This collection cannot be enumerated.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgBaseItem[] Items { get => this._items; set => this._items = value; }

        /// <summary>identitySet</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgIdentitySet LastModifiedBy { get; set; }

        /// <summary>Represents an Azure Active Directory user object.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgUser LastModifiedByUser { get; set; }

        /// <summary>Date and time the item was last modified. Read-only.</summary>
        public global::System.DateTime? LastModifiedDateTime { get; set; }

        /// <summary>Backing field for <see cref="Lists" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgList[] _lists;

        /// <summary>The collection of lists under this site.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgList[] Lists { get => this._lists; set => this._lists = value; }

        /// <summary>The name of the item. Read-write.</summary>
        public string Name { get; set; }

        /// <summary>Backing field for <see cref="Onenote" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgOnenote _onenote;

        /// <summary>onenote</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgOnenote Onenote { get => (this._onenote = this._onenote ?? new Microsoft.Graph.PowerShell.Users.Models.MgOnenote()); set => this._onenote = value; }

        /// <summary>Backing field for <see cref="Pages" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgSitePage[] _pages;

        /// <summary>The collection of pages in the SitePages list in this site.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgSitePage[] Pages { get => this._pages; set => this._pages = value; }

        /// <summary>itemReference</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgItemReference ParentReference { get; set; }

        /// <summary>Backing field for <see cref="Permissions" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgPermission[] _permissions;

        /// <summary>The permissions associated with the site. Nullable.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgPermission[] Permissions { get => this._permissions; set => this._permissions = value; }

        /// <summary>Backing field for <see cref="Root" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgRoot _root;

        /// <summary>root</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgRoot Root { get => (this._root = this._root ?? new Microsoft.Graph.PowerShell.Users.Models.MgRoot()); set => this._root = value; }

        /// <summary>Backing field for <see cref="SharepointIds" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgSharepointIds _sharepointIds;

        /// <summary>sharepointIds</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgSharepointIds SharepointIds { get => (this._sharepointIds = this._sharepointIds ?? new Microsoft.Graph.PowerShell.Users.Models.MgSharepointIds()); set => this._sharepointIds = value; }

        /// <summary>Backing field for <see cref="SiteCollection" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgSiteCollection _siteCollection;

        /// <summary>siteCollection</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgSiteCollection SiteCollection { get => (this._siteCollection = this._siteCollection ?? new Microsoft.Graph.PowerShell.Users.Models.MgSiteCollection()); set => this._siteCollection = value; }

        /// <summary>Backing field for <see cref="Sites" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgSite[] _sites;

        /// <summary>The collection of the sub-sites under this site.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgSite[] Sites { get => this._sites; set => this._sites = value; }

        /// <summary>Backing field for <see cref="TermStore" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgTermStore _termStore;

        /// <summary>store</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgTermStore TermStore { get => (this._termStore = this._termStore ?? new Microsoft.Graph.PowerShell.Users.Models.MgTermStore()); set => this._termStore = value; }

        /// <summary>URL that displays the resource in the browser. Read-only.</summary>
        public string WebUrl { get; set; }

    }
}