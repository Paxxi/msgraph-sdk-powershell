// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>messageRuleActions</summary>
    public partial class MgMessageRuleActions
    {

        /// <summary>Backing field for <see cref="AssignCategories" /> property.</summary>
        private string[] _assignCategories;

        /// <summary>A list of categories to be assigned to a message.</summary>
        public string[] AssignCategories { get => this._assignCategories; set => this._assignCategories = value; }

        /// <summary>Backing field for <see cref="CopyToFolder" /> property.</summary>
        private string _copyToFolder;

        /// <summary>The ID of a folder that a message is to be copied to.</summary>
        public string CopyToFolder { get => this._copyToFolder; set => this._copyToFolder = value; }

        /// <summary>Backing field for <see cref="Delete" /> property.</summary>
        private bool? _delete;

        /// <summary>Indicates whether a message should be moved to the Deleted Items folder.</summary>
        public bool? Delete { get => this._delete; set => this._delete = value; }

        /// <summary>Backing field for <see cref="ForwardAsAttachmentTo" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgRecipient[] _forwardAsAttachmentTo;

        /// <summary>
        /// The email addresses of the recipients to which a message should be forwarded as an attachment.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgRecipient[] ForwardAsAttachmentTo { get => this._forwardAsAttachmentTo; set => this._forwardAsAttachmentTo = value; }

        /// <summary>Backing field for <see cref="ForwardTo" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgRecipient[] _forwardTo;

        /// <summary>The email addresses of the recipients to which a message should be forwarded.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgRecipient[] ForwardTo { get => this._forwardTo; set => this._forwardTo = value; }

        /// <summary>Backing field for <see cref="MarkAsRead" /> property.</summary>
        private bool? _markAsRead;

        /// <summary>Indicates whether a message should be marked as read.</summary>
        public bool? MarkAsRead { get => this._markAsRead; set => this._markAsRead = value; }

        /// <summary>Backing field for <see cref="MarkImportance" /> property.</summary>
        private string _markImportance;

        /// <summary>importance</summary>
        public string MarkImportance { get => this._markImportance; set => this._markImportance = value; }

        /// <summary>Backing field for <see cref="MoveToFolder" /> property.</summary>
        private string _moveToFolder;

        /// <summary>The ID of the folder that a message will be moved to.</summary>
        public string MoveToFolder { get => this._moveToFolder; set => this._moveToFolder = value; }

        /// <summary>Backing field for <see cref="PermanentDelete" /> property.</summary>
        private bool? _permanentDelete;

        /// <summary>
        /// Indicates whether a message should be permanently deleted and not saved to the Deleted Items folder.
        /// </summary>
        public bool? PermanentDelete { get => this._permanentDelete; set => this._permanentDelete = value; }

        /// <summary>Backing field for <see cref="RedirectTo" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgRecipient[] _redirectTo;

        /// <summary>The email address to which a message should be redirected.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgRecipient[] RedirectTo { get => this._redirectTo; set => this._redirectTo = value; }

        /// <summary>Backing field for <see cref="StopProcessingRules" /> property.</summary>
        private bool? _stopProcessingRules;

        /// <summary>Indicates whether subsequent rules should be evaluated.</summary>
        public bool? StopProcessingRules { get => this._stopProcessingRules; set => this._stopProcessingRules = value; }

    }
}