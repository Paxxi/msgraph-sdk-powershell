// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>messageRule</summary>
    public partial class MgMessageRule
    {

        /// <summary>Backing field for <see cref="Actions" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgMessageRuleActions _actions;

        /// <summary>messageRuleActions</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgMessageRuleActions Actions { get => (this._actions = this._actions ?? new Microsoft.Graph.PowerShell.Users.Models.MgMessageRuleActions()); set => this._actions = value; }

        /// <summary>Backing field for <see cref="Conditions" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgMessageRulePredicates _conditions;

        /// <summary>messageRulePredicates</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgMessageRulePredicates Conditions { get => (this._conditions = this._conditions ?? new Microsoft.Graph.PowerShell.Users.Models.MgMessageRulePredicates()); set => this._conditions = value; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>The display name of the rule.</summary>
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="Exceptions" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgMessageRulePredicates _exceptions;

        /// <summary>messageRulePredicates</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgMessageRulePredicates Exceptions { get => (this._exceptions = this._exceptions ?? new Microsoft.Graph.PowerShell.Users.Models.MgMessageRulePredicates()); set => this._exceptions = value; }

        /// <summary>Backing field for <see cref="HasError" /> property.</summary>
        private bool? _hasError;

        /// <summary>Indicates whether the rule is in an error condition. Read-only.</summary>
        public bool? HasError { get => this._hasError; set => this._hasError = value; }

        /// <summary>Read-only.</summary>
        public string Id { get; set; }

        /// <summary>Backing field for <see cref="IsEnabled" /> property.</summary>
        private bool? _isEnabled;

        /// <summary>Indicates whether the rule is enabled to be applied to messages.</summary>
        public bool? IsEnabled { get => this._isEnabled; set => this._isEnabled = value; }

        /// <summary>Backing field for <see cref="IsReadOnly" /> property.</summary>
        private bool? _isReadOnly;

        /// <summary>
        /// Indicates if the rule is read-only and cannot be modified or deleted by the rules REST API.
        /// </summary>
        public bool? IsReadOnly { get => this._isReadOnly; set => this._isReadOnly = value; }

        /// <summary>Backing field for <see cref="Sequence" /> property.</summary>
        private int? _sequence;

        /// <summary>Indicates the order in which the rule is executed, among other rules.</summary>
        public int? Sequence { get => this._sequence; set => this._sequence = value; }

    }
}