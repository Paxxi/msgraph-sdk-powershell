// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>shiftActivity</summary>
    public partial class MgShiftActivity
    {

        /// <summary>Backing field for <see cref="Code" /> property.</summary>
        private string _code;

        /// <summary>Customer defined code for the shiftActivity. Required.</summary>
        public string Code { get => this._code; set => this._code = value; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>The name of the shiftActivity. Required.</summary>
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="EndDateTime" /> property.</summary>
        private global::System.DateTime? _endDateTime;

        /// <summary>
        /// The end date and time for the shiftActivity. The Timestamp type represents date and time information using ISO 8601 format
        /// and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
        /// </summary>
        public global::System.DateTime? EndDateTime { get => this._endDateTime; set => this._endDateTime = value; }

        /// <summary>Backing field for <see cref="IsPaid" /> property.</summary>
        private bool? _isPaid;

        /// <summary>
        /// Indicates whether the microsoft.graph.user should be paid for the activity during their shift. Required.
        /// </summary>
        public bool? IsPaid { get => this._isPaid; set => this._isPaid = value; }

        /// <summary>Backing field for <see cref="StartDateTime" /> property.</summary>
        private global::System.DateTime? _startDateTime;

        /// <summary>
        /// The start date and time for the shiftActivity. The Timestamp type represents date and time information using ISO 8601
        /// format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
        /// </summary>
        public global::System.DateTime? StartDateTime { get => this._startDateTime; set => this._startDateTime = value; }

        /// <summary>Backing field for <see cref="Theme" /> property.</summary>
        private string _theme;

        /// <summary>scheduleEntityTheme</summary>
        public string Theme { get => this._theme; set => this._theme = value; }

    }
}