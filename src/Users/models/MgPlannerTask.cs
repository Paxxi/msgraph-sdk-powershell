// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>plannerTask</summary>
    public partial class MgPlannerTask
    {

        /// <summary>Backing field for <see cref="ActiveChecklistItemCount" /> property.</summary>
        private int? _activeChecklistItemCount;

        /// <summary>
        /// Number of checklist items with value set to false, representing incomplete items.
        /// </summary>
        public int? ActiveChecklistItemCount { get => this._activeChecklistItemCount; set => this._activeChecklistItemCount = value; }

        /// <summary>Backing field for <see cref="AppliedCategories" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgPlannerAppliedCategories _appliedCategories;

        /// <summary>plannerAppliedCategories</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgPlannerAppliedCategories AppliedCategories { get => (this._appliedCategories = this._appliedCategories ?? new Microsoft.Graph.PowerShell.Users.Models.MgPlannerAppliedCategories()); set => this._appliedCategories = value; }

        /// <summary>Backing field for <see cref="AssignedToTaskBoardFormat" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgPlannerAssignedToTaskBoardTaskFormat _assignedToTaskBoardFormat;

        /// <summary>plannerAssignedToTaskBoardTaskFormat</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgPlannerAssignedToTaskBoardTaskFormat AssignedToTaskBoardFormat { get => (this._assignedToTaskBoardFormat = this._assignedToTaskBoardFormat ?? new Microsoft.Graph.PowerShell.Users.Models.MgPlannerAssignedToTaskBoardTaskFormat()); set => this._assignedToTaskBoardFormat = value; }

        /// <summary>Backing field for <see cref="AssigneePriority" /> property.</summary>
        private string _assigneePriority;

        /// <summary>
        /// Hint used to order items of this type in a list view. The format is defined as outlined here.
        /// </summary>
        public string AssigneePriority { get => this._assigneePriority; set => this._assigneePriority = value; }

        /// <summary>Backing field for <see cref="Assignments" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgPlannerAssignments _assignments;

        /// <summary>plannerAssignments</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgPlannerAssignments Assignments { get => (this._assignments = this._assignments ?? new Microsoft.Graph.PowerShell.Users.Models.MgPlannerAssignments()); set => this._assignments = value; }

        /// <summary>Backing field for <see cref="BucketId" /> property.</summary>
        private string _bucketId;

        /// <summary>
        /// Bucket ID to which the task belongs. The bucket needs to be in the plan that the task is in. It is 28 characters long
        /// and case-sensitive. Format validation is done on the service.
        /// </summary>
        public string BucketId { get => this._bucketId; set => this._bucketId = value; }

        /// <summary>Backing field for <see cref="BucketTaskBoardFormat" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgPlannerBucketTaskBoardTaskFormat _bucketTaskBoardFormat;

        /// <summary>plannerBucketTaskBoardTaskFormat</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgPlannerBucketTaskBoardTaskFormat BucketTaskBoardFormat { get => (this._bucketTaskBoardFormat = this._bucketTaskBoardFormat ?? new Microsoft.Graph.PowerShell.Users.Models.MgPlannerBucketTaskBoardTaskFormat()); set => this._bucketTaskBoardFormat = value; }

        /// <summary>Backing field for <see cref="ChecklistItemCount" /> property.</summary>
        private int? _checklistItemCount;

        /// <summary>Number of checklist items that are present on the task.</summary>
        public int? ChecklistItemCount { get => this._checklistItemCount; set => this._checklistItemCount = value; }

        /// <summary>Backing field for <see cref="CompletedBy" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgIdentitySet _completedBy;

        /// <summary>identitySet</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgIdentitySet CompletedBy { get => (this._completedBy = this._completedBy ?? new Microsoft.Graph.PowerShell.Users.Models.MgIdentitySet()); set => this._completedBy = value; }

        /// <summary>Backing field for <see cref="CompletedDateTime" /> property.</summary>
        private global::System.DateTime? _completedDateTime;

        /// <summary>
        /// Read-only. Date and time at which the 'percentComplete' of the task is set to '100'. The Timestamp type represents date
        /// and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        /// </summary>
        public global::System.DateTime? CompletedDateTime { get => this._completedDateTime; set => this._completedDateTime = value; }

        /// <summary>Backing field for <see cref="ConversationThreadId" /> property.</summary>
        private string _conversationThreadId;

        /// <summary>
        /// Thread ID of the conversation on the task. This is the ID of the conversation thread object created in the group.
        /// </summary>
        public string ConversationThreadId { get => this._conversationThreadId; set => this._conversationThreadId = value; }

        /// <summary>Backing field for <see cref="CreatedBy" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgIdentitySet _createdBy;

        /// <summary>identitySet</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgIdentitySet CreatedBy { get => (this._createdBy = this._createdBy ?? new Microsoft.Graph.PowerShell.Users.Models.MgIdentitySet()); set => this._createdBy = value; }

        /// <summary>Backing field for <see cref="CreatedDateTime" /> property.</summary>
        private global::System.DateTime? _createdDateTime;

        /// <summary>
        /// Read-only. Date and time at which the task is created. The Timestamp type represents date and time information using ISO
        /// 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        /// </summary>
        public global::System.DateTime? CreatedDateTime { get => this._createdDateTime; set => this._createdDateTime = value; }

        /// <summary>Backing field for <see cref="CreationSource" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgPlannerTaskCreation _creationSource;

        /// <summary>plannerTaskCreation</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgPlannerTaskCreation CreationSource { get => (this._creationSource = this._creationSource ?? new Microsoft.Graph.PowerShell.Users.Models.MgPlannerTaskCreation()); set => this._creationSource = value; }

        /// <summary>Backing field for <see cref="Details" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgPlannerTaskDetails _details;

        /// <summary>plannerTaskDetails</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgPlannerTaskDetails Details { get => (this._details = this._details ?? new Microsoft.Graph.PowerShell.Users.Models.MgPlannerTaskDetails()); set => this._details = value; }

        /// <summary>Backing field for <see cref="DueDateTime" /> property.</summary>
        private global::System.DateTime? _dueDateTime;

        /// <summary>
        /// Date and time at which the task is due. The Timestamp type represents date and time information using ISO 8601 format
        /// and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        /// </summary>
        public global::System.DateTime? DueDateTime { get => this._dueDateTime; set => this._dueDateTime = value; }

        /// <summary>Backing field for <see cref="HasDescription" /> property.</summary>
        private bool? _hasDescription;

        /// <summary>
        /// Read-only. Value is true if the details object of the task has a non-empty description and false otherwise.
        /// </summary>
        public bool? HasDescription { get => this._hasDescription; set => this._hasDescription = value; }

        /// <summary>Read-only.</summary>
        public string Id { get; set; }

        /// <summary>Backing field for <see cref="OrderHint" /> property.</summary>
        private string _orderHint;

        /// <summary>
        /// Hint used to order items of this type in a list view. The format is defined as outlined here.
        /// </summary>
        public string OrderHint { get => this._orderHint; set => this._orderHint = value; }

        /// <summary>Backing field for <see cref="PercentComplete" /> property.</summary>
        private int? _percentComplete;

        /// <summary>
        /// Percentage of task completion. When set to 100, the task is considered completed.
        /// </summary>
        public int? PercentComplete { get => this._percentComplete; set => this._percentComplete = value; }

        /// <summary>Backing field for <see cref="PlanId" /> property.</summary>
        private string _planId;

        /// <summary>Plan ID to which the task belongs.</summary>
        public string PlanId { get => this._planId; set => this._planId = value; }

        /// <summary>Backing field for <see cref="PreviewType" /> property.</summary>
        private string _previewType;

        /// <summary>plannerPreviewType</summary>
        public string PreviewType { get => this._previewType; set => this._previewType = value; }

        /// <summary>Backing field for <see cref="Priority" /> property.</summary>
        private int? _priority;

        /// <summary>
        /// Priority of the task. Valid range of values is between 0 and 10 (inclusive), with increasing value being lower priority
        /// (0 has the highest priority and 10 has the lowest priority). Currently, Planner interprets values 0 and 1 as 'urgent',
        /// 2 and 3 and 4 as 'important', 5, 6, and 7 as 'medium', and 8, 9, and 10 as 'low'. Currently, Planner sets the value 1
        /// for 'urgent', 3 for 'important', 5 for 'medium', and 9 for 'low'.
        /// </summary>
        public int? Priority { get => this._priority; set => this._priority = value; }

        /// <summary>Backing field for <see cref="ProgressTaskBoardFormat" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgPlannerProgressTaskBoardTaskFormat _progressTaskBoardFormat;

        /// <summary>plannerProgressTaskBoardTaskFormat</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgPlannerProgressTaskBoardTaskFormat ProgressTaskBoardFormat { get => (this._progressTaskBoardFormat = this._progressTaskBoardFormat ?? new Microsoft.Graph.PowerShell.Users.Models.MgPlannerProgressTaskBoardTaskFormat()); set => this._progressTaskBoardFormat = value; }

        /// <summary>Backing field for <see cref="ReferenceCount" /> property.</summary>
        private int? _referenceCount;

        /// <summary>Number of external references that exist on the task.</summary>
        public int? ReferenceCount { get => this._referenceCount; set => this._referenceCount = value; }

        /// <summary>Backing field for <see cref="StartDateTime" /> property.</summary>
        private global::System.DateTime? _startDateTime;

        /// <summary>
        /// Date and time at which the task starts. The Timestamp type represents date and time information using ISO 8601 format
        /// and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
        /// </summary>
        public global::System.DateTime? StartDateTime { get => this._startDateTime; set => this._startDateTime = value; }

        /// <summary>Backing field for <see cref="Title" /> property.</summary>
        private string _title;

        /// <summary>Title of the task.</summary>
        public string Title { get => this._title; set => this._title = value; }

    }
}