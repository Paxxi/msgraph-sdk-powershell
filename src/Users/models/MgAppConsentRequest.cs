// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>appConsentRequest</summary>
    public partial class MgAppConsentRequest
    {

        /// <summary>Backing field for <see cref="AppDisplayName" /> property.</summary>
        private string _appDisplayName;

        /// <summary>
        /// The display name of the app for which consent is requested. Required. Supports $filter (eq only) and $orderby.
        /// </summary>
        public string AppDisplayName { get => this._appDisplayName; set => this._appDisplayName = value; }

        /// <summary>Backing field for <see cref="AppId" /> property.</summary>
        private string _appId;

        /// <summary>
        /// The identifier of the application. Required. Supports $filter (eq only) and $orderby.
        /// </summary>
        public string AppId { get => this._appId; set => this._appId = value; }

        /// <summary>Backing field for <see cref="ConsentType" /> property.</summary>
        private string _consentType;

        /// <summary>
        /// The consent type of the request. Possible values are: Static and Dynamic. These represent static and dynamic permissions,
        /// respectively, requested in the consent workflow. Supports $filter (eq only) and $orderby. Required.
        /// </summary>
        public string ConsentType { get => this._consentType; set => this._consentType = value; }

        /// <summary>Read-only.</summary>
        public string Id { get; set; }

        /// <summary>Backing field for <see cref="PendingScopes" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgAppConsentRequestScope[] _pendingScopes;

        /// <summary>
        /// A list of pending scopes waiting for approval. This is empty if the consentType is Static. Required.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgAppConsentRequestScope[] PendingScopes { get => this._pendingScopes; set => this._pendingScopes = value; }

        /// <summary>Backing field for <see cref="UserConsentRequests" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgUserConsentRequest[] _userConsentRequests;

        /// <summary>A list of pending user consent requests.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgUserConsentRequest[] UserConsentRequests { get => this._userConsentRequests; set => this._userConsentRequests = value; }

    }
}