// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>
    /// Represents an Azure Active Directory object. The directoryObject type is the base type for many other directory entity
    /// types.
    /// </summary>
    public partial class MgGroup
    {

        /// <summary>Backing field for <see cref="AcceptedSenders" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] _acceptedSenders;

        /// <summary>
        /// The list of users or groups that are allowed to create post's or calendar events in this group. If this list is non-empty
        /// then only users or groups listed here are allowed to post.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] AcceptedSenders { get => this._acceptedSenders; set => this._acceptedSenders = value; }

        /// <summary>Backing field for <see cref="AccessType" /> property.</summary>
        private string _accessType;

        /// <summary>groupAccessType</summary>
        public string AccessType { get => this._accessType; set => this._accessType = value; }

        /// <summary>Backing field for <see cref="AllowExternalSenders" /> property.</summary>
        private bool? _allowExternalSenders;

        /// <summary>
        /// Indicates if people external to the organization can send messages to the group. Default value is false. Returned only
        /// on $select. Supported only on the Get group API (GET /groups/{ID}).
        /// </summary>
        public bool? AllowExternalSenders { get => this._allowExternalSenders; set => this._allowExternalSenders = value; }

        /// <summary>Backing field for <see cref="AppRoleAssignments" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgAppRoleAssignment[] _appRoleAssignments;

        /// <summary>
        /// Represents the app roles a group has been granted for an application. Supports $expand.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgAppRoleAssignment[] AppRoleAssignments { get => this._appRoleAssignments; set => this._appRoleAssignments = value; }

        /// <summary>Backing field for <see cref="AssignedLabels" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgAssignedLabel[] _assignedLabels;

        /// <summary>
        /// The list of sensitivity label pairs (label ID, label name) associated with a Microsoft 365 group. Returned only on $select.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgAssignedLabel[] AssignedLabels { get => this._assignedLabels; set => this._assignedLabels = value; }

        /// <summary>Backing field for <see cref="AssignedLicenses" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgAssignedLicense[] _assignedLicenses;

        /// <summary>
        /// The licenses that are assigned to the group. Returned only on $select. Supports $filter (eq). Read-only.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgAssignedLicense[] AssignedLicenses { get => this._assignedLicenses; set => this._assignedLicenses = value; }

        /// <summary>Backing field for <see cref="AutoSubscribeNewMembers" /> property.</summary>
        private bool? _autoSubscribeNewMembers;

        /// <summary>
        /// Indicates if new members added to the group will be auto-subscribed to receive email notifications. You can set this property
        /// in a PATCH request for the group; do not set it in the initial POST request that creates the group. Default value is false.
        /// Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
        /// </summary>
        public bool? AutoSubscribeNewMembers { get => this._autoSubscribeNewMembers; set => this._autoSubscribeNewMembers = value; }

        /// <summary>Backing field for <see cref="Calendar" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgCalendar _calendar;

        /// <summary>calendar</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgCalendar Calendar { get => (this._calendar = this._calendar ?? new Microsoft.Graph.PowerShell.Users.Models.MgCalendar()); set => this._calendar = value; }

        /// <summary>Backing field for <see cref="CalendarView" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgEvent[] _calendarView;

        /// <summary>The calendar view for the calendar. Read-only.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgEvent[] CalendarView { get => this._calendarView; set => this._calendarView = value; }

        /// <summary>Backing field for <see cref="Classification" /> property.</summary>
        private string _classification;

        /// <summary>
        /// Describes a classification for the group (such as low, medium or high business impact). Valid values for this property
        /// are defined by creating a ClassificationList setting value, based on the template definition.Returned by default. Supports
        /// $filter (eq, ne, NOT, ge, le, startsWith).
        /// </summary>
        public string Classification { get => this._classification; set => this._classification = value; }

        /// <summary>Backing field for <see cref="Conversations" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgConversation[] _conversations;

        /// <summary>The group's conversations.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgConversation[] Conversations { get => this._conversations; set => this._conversations = value; }

        /// <summary>Backing field for <see cref="CreatedByAppId" /> property.</summary>
        private string _createdByAppId;

        /// <summary>
        /// App ID of the app used to create the group. Can be null for some groups. Returned by default. Read-only. Supports $filter
        /// (eq, ne, NOT, in, startsWith).
        /// </summary>
        public string CreatedByAppId { get => this._createdByAppId; set => this._createdByAppId = value; }

        /// <summary>Backing field for <see cref="CreatedDateTime" /> property.</summary>
        private global::System.DateTime? _createdDateTime;

        /// <summary>
        /// Timestamp of when the group was created. The value cannot be modified and is automatically populated when the group is
        /// created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For
        /// example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Supports $filter (eq, ne, NOT, ge,
        /// le, in). Read-only.
        /// </summary>
        public global::System.DateTime? CreatedDateTime { get => this._createdDateTime; set => this._createdDateTime = value; }

        /// <summary>Backing field for <see cref="CreatedOnBehalfOf" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject _createdOnBehalfOf;

        /// <summary>
        /// Represents an Azure Active Directory object. The directoryObject type is the base type for many other directory entity
        /// types.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject CreatedOnBehalfOf { get => (this._createdOnBehalfOf = this._createdOnBehalfOf ?? new Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject()); set => this._createdOnBehalfOf = value; }

        public global::System.DateTime? DeletedDateTime { get; set; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>
        /// An optional description for the group. Returned by default. Supports $filter (eq, ne, NOT, ge, le, startsWith) and $search.
        /// </summary>
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>
        /// The display name for the group. This property is required when a group is created and cannot be cleared during updates.
        /// Returned by default. Supports $filter (eq, ne, NOT, ge, le, in, startsWith), $search, and $orderBy.
        /// </summary>
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="Drive" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDrive _drive;

        /// <summary>drive</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDrive Drive { get => (this._drive = this._drive ?? new Microsoft.Graph.PowerShell.Users.Models.MgDrive()); set => this._drive = value; }

        /// <summary>Backing field for <see cref="Drives" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDrive[] _drives;

        /// <summary>The group's drives. Read-only.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDrive[] Drives { get => this._drives; set => this._drives = value; }

        /// <summary>Backing field for <see cref="Endpoints" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgEndpoint[] _endpoints;

        /// <summary>Endpoints for the group. Read-only. Nullable.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgEndpoint[] Endpoints { get => this._endpoints; set => this._endpoints = value; }

        /// <summary>Backing field for <see cref="Events" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgEvent[] _events;

        /// <summary>The group's events.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgEvent[] Events { get => this._events; set => this._events = value; }

        /// <summary>Backing field for <see cref="ExpirationDateTime" /> property.</summary>
        private global::System.DateTime? _expirationDateTime;

        /// <summary>
        /// Timestamp of when the group is set to expire. The value cannot be modified and is automatically populated when the group
        /// is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For
        /// example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Supports $filter (eq, ne, NOT, ge,
        /// le, in). Read-only.
        /// </summary>
        public global::System.DateTime? ExpirationDateTime { get => this._expirationDateTime; set => this._expirationDateTime = value; }

        /// <summary>Backing field for <see cref="Extensions" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgExtension[] _extensions;

        /// <summary>The collection of open extensions defined for the group. Read-only. Nullable.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgExtension[] Extensions { get => this._extensions; set => this._extensions = value; }

        /// <summary>Backing field for <see cref="GroupLifecyclePolicies" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgGroupLifecyclePolicy[] _groupLifecyclePolicies;

        /// <summary>The collection of lifecycle policies for this group. Read-only. Nullable.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgGroupLifecyclePolicy[] GroupLifecyclePolicies { get => this._groupLifecyclePolicies; set => this._groupLifecyclePolicies = value; }

        /// <summary>Backing field for <see cref="GroupTypes" /> property.</summary>
        private string[] _groupTypes;

        /// <summary>
        /// Specifies the group type and its membership. If the collection contains Unified, the group is a Microsoft 365 group; otherwise,
        /// it's either a security group or distribution group. For details, see groups overview.If the collection includes DynamicMembership,
        /// the group has dynamic membership; otherwise, membership is static. Returned by default. Supports $filter (eq, NOT).
        /// </summary>
        public string[] GroupTypes { get => this._groupTypes; set => this._groupTypes = value; }

        /// <summary>Backing field for <see cref="HasMembersWithLicenseErrors" /> property.</summary>
        private bool? _hasMembersWithLicenseErrors;

        /// <summary>
        /// Indicates whether there are members in this group that have license errors from its group-based license assignment. This
        /// property is never returned on a GET operation. You can use it as a $filter argument to get groups that have members with
        /// license errors (that is, filter for this property being true). Supports $filter (eq).
        /// </summary>
        public bool? HasMembersWithLicenseErrors { get => this._hasMembersWithLicenseErrors; set => this._hasMembersWithLicenseErrors = value; }

        /// <summary>Backing field for <see cref="HideFromAddressLists" /> property.</summary>
        private bool? _hideFromAddressLists;

        /// <summary>
        /// true if the group is not displayed in certain parts of the Outlook user interface: in the Address Book, in address lists
        /// for selecting message recipients, and in the Browse Groups dialog for searching groups; false otherwise. Default value
        /// is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
        /// </summary>
        public bool? HideFromAddressLists { get => this._hideFromAddressLists; set => this._hideFromAddressLists = value; }

        /// <summary>Backing field for <see cref="HideFromOutlookClients" /> property.</summary>
        private bool? _hideFromOutlookClients;

        /// <summary>
        /// true if the group is not displayed in Outlook clients, such as Outlook for Windows and Outlook on the web, false otherwise.
        /// Default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
        /// </summary>
        public bool? HideFromOutlookClients { get => this._hideFromOutlookClients; set => this._hideFromOutlookClients = value; }

        /// <summary>Read-only.</summary>
        public string Id { get; set; }

        /// <summary>Backing field for <see cref="InfoCatalogs" /> property.</summary>
        private string[] _infoCatalogs;

        /// <summary>
        /// Identifies the info segments assigned to the group. Returned by default. Supports $filter (eq, NOT, ge, le, startsWith).
        /// </summary>
        public string[] InfoCatalogs { get => this._infoCatalogs; set => this._infoCatalogs = value; }

        /// <summary>Backing field for <see cref="IsArchived" /> property.</summary>
        private bool? _isArchived;

        public bool? IsArchived { get => this._isArchived; set => this._isArchived = value; }

        /// <summary>Backing field for <see cref="IsAssignableToRole" /> property.</summary>
        private bool? _isAssignableToRole;

        /// <summary>
        /// Indicates whether this group can be assigned to an Azure Active Directory role.This property can only be set while creating
        /// the group and is immutable. If set to true, the securityEnabled property must also be set to true and the group cannot
        /// be a dynamic group (that is, groupTypes cannot contain DynamicMembership). Only callers in Global administrator and Privileged
        /// role administrator roles can set this property. The caller must also be assigned the Directory.AccessAsUser.All permission
        /// to set this property. For more, see Using a group to manage Azure AD role assignmentsReturned by default. Supports $filter
        /// (eq, ne, NOT).
        /// </summary>
        public bool? IsAssignableToRole { get => this._isAssignableToRole; set => this._isAssignableToRole = value; }

        /// <summary>Backing field for <see cref="IsFavorite" /> property.</summary>
        private bool? _isFavorite;

        public bool? IsFavorite { get => this._isFavorite; set => this._isFavorite = value; }

        /// <summary>Backing field for <see cref="IsSubscribedByMail" /> property.</summary>
        private bool? _isSubscribedByMail;

        /// <summary>
        /// Indicates whether the signed-in user is subscribed to receive email conversations. Default value is true. Returned only
        /// on $select. Supported only on the Get group API (GET /groups/{ID}).
        /// </summary>
        public bool? IsSubscribedByMail { get => this._isSubscribedByMail; set => this._isSubscribedByMail = value; }

        /// <summary>Backing field for <see cref="LicenseProcessingState" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgLicenseProcessingState _licenseProcessingState;

        /// <summary>licenseProcessingState</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgLicenseProcessingState LicenseProcessingState { get => (this._licenseProcessingState = this._licenseProcessingState ?? new Microsoft.Graph.PowerShell.Users.Models.MgLicenseProcessingState()); set => this._licenseProcessingState = value; }

        /// <summary>Backing field for <see cref="Mail" /> property.</summary>
        private string _mail;

        /// <summary>
        /// The SMTP address for the group, for example, 'serviceadmins@contoso.onmicrosoft.com'. Returned by default. Read-only.
        /// Supports $filter (eq, ne, NOT, ge, le, in, startsWith).
        /// </summary>
        public string Mail { get => this._mail; set => this._mail = value; }

        /// <summary>Backing field for <see cref="MailEnabled" /> property.</summary>
        private bool? _mailEnabled;

        /// <summary>
        /// Specifies whether the group is mail-enabled. Returned by default. Supports $filter (eq, ne, NOT).
        /// </summary>
        public bool? MailEnabled { get => this._mailEnabled; set => this._mailEnabled = value; }

        /// <summary>Backing field for <see cref="MailNickname" /> property.</summary>
        private string _mailNickname;

        /// <summary>
        /// The mail alias for the group, unique in the organization. This property must be specified when a group is created. These
        /// characters cannot be used in the mailNickName: @()/[]';:.<>,SPACE. Returned by default. Supports $filter (eq, ne, NOT,
        /// ge, le, in, startsWith).
        /// </summary>
        public string MailNickname { get => this._mailNickname; set => this._mailNickname = value; }

        /// <summary>Backing field for <see cref="MdmAppId" /> property.</summary>
        private string _mdmAppId;

        public string MdmAppId { get => this._mdmAppId; set => this._mdmAppId = value; }

        /// <summary>Backing field for <see cref="MemberOf" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] _memberOf;

        /// <summary>
        /// Groups and administrative units that this group is a member of. HTTP Methods: GET (supported for all groups). Read-only.
        /// Nullable. Supports $expand.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] MemberOf { get => this._memberOf; set => this._memberOf = value; }

        /// <summary>Backing field for <see cref="Members" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] _members;

        /// <summary>
        /// Users, contacts, and groups that are members of this group. HTTP Methods: GET (supported for all groups), POST (supported
        /// for security groups and mail-enabled security groups), DELETE (supported only for security groups) Read-only. Nullable.
        /// Supports $expand.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] Members { get => this._members; set => this._members = value; }

        /// <summary>Backing field for <see cref="MembersWithLicenseErrors" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] _membersWithLicenseErrors;

        /// <summary>
        /// A list of group members with license errors from this group-based license assignment. Read-only.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] MembersWithLicenseErrors { get => this._membersWithLicenseErrors; set => this._membersWithLicenseErrors = value; }

        /// <summary>Backing field for <see cref="MembershipRule" /> property.</summary>
        private string _membershipRule;

        /// <summary>
        /// The rule that determines members for this group if the group is a dynamic group (groupTypes contains DynamicMembership).
        /// For more information about the syntax of the membership rule, see Membership Rules syntax. Returned by default. Supports
        /// $filter (eq, ne, NOT, ge, le, startsWith).
        /// </summary>
        public string MembershipRule { get => this._membershipRule; set => this._membershipRule = value; }

        /// <summary>Backing field for <see cref="MembershipRuleProcessingState" /> property.</summary>
        private string _membershipRuleProcessingState;

        /// <summary>
        /// Indicates whether the dynamic membership processing is on or paused. Possible values are On or Paused. Returned by default.
        /// Supports $filter (eq, ne, NOT, in).
        /// </summary>
        public string MembershipRuleProcessingState { get => this._membershipRuleProcessingState; set => this._membershipRuleProcessingState = value; }

        /// <summary>Backing field for <see cref="MembershipRuleProcessingStatus" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgMembershipRuleProcessingStatus _membershipRuleProcessingStatus;

        /// <summary>membershipRuleProcessingStatus</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgMembershipRuleProcessingStatus MembershipRuleProcessingStatus { get => (this._membershipRuleProcessingStatus = this._membershipRuleProcessingStatus ?? new Microsoft.Graph.PowerShell.Users.Models.MgMembershipRuleProcessingStatus()); set => this._membershipRuleProcessingStatus = value; }

        /// <summary>Backing field for <see cref="OnPremisesDomainName" /> property.</summary>
        private string _onPremisesDomainName;

        /// <summary>
        /// Contains the on-premises domain FQDN, also called dnsDomainName synchronized from the on-premises directory. The property
        /// is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure
        /// AD Connect.Returned by default. Read-only.
        /// </summary>
        public string OnPremisesDomainName { get => this._onPremisesDomainName; set => this._onPremisesDomainName = value; }

        /// <summary>Backing field for <see cref="OnPremisesLastSyncDateTime" /> property.</summary>
        private global::System.DateTime? _onPremisesLastSyncDateTime;

        /// <summary>
        /// Indicates the last time at which the group was synced with the on-premises directory.The Timestamp type represents date
        /// and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
        /// Returned by default. Read-only. Supports $filter (eq, ne, NOT, ge, le, in).
        /// </summary>
        public global::System.DateTime? OnPremisesLastSyncDateTime { get => this._onPremisesLastSyncDateTime; set => this._onPremisesLastSyncDateTime = value; }

        /// <summary>Backing field for <see cref="OnPremisesNetBiosName" /> property.</summary>
        private string _onPremisesNetBiosName;

        /// <summary>
        /// Contains the on-premises netBios name synchronized from the on-premises directory. The property is only populated for
        /// customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect.Returned by
        /// default. Read-only.
        /// </summary>
        public string OnPremisesNetBiosName { get => this._onPremisesNetBiosName; set => this._onPremisesNetBiosName = value; }

        /// <summary>Backing field for <see cref="OnPremisesProvisioningErrors" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgOnPremisesProvisioningError[] _onPremisesProvisioningErrors;

        /// <summary>
        /// Errors when using Microsoft synchronization product during provisioning. Returned by default. Supports $filter (eq, NOT).
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgOnPremisesProvisioningError[] OnPremisesProvisioningErrors { get => this._onPremisesProvisioningErrors; set => this._onPremisesProvisioningErrors = value; }

        /// <summary>Backing field for <see cref="OnPremisesSamAccountName" /> property.</summary>
        private string _onPremisesSamAccountName;

        /// <summary>
        /// Contains the on-premises SAM account name synchronized from the on-premises directory. The property is only populated
        /// for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect.Returned
        /// by default. Supports $filter (eq, ne, NOT, ge, le, in, startsWith). Read-only.
        /// </summary>
        public string OnPremisesSamAccountName { get => this._onPremisesSamAccountName; set => this._onPremisesSamAccountName = value; }

        /// <summary>Backing field for <see cref="OnPremisesSecurityIdentifier" /> property.</summary>
        private string _onPremisesSecurityIdentifier;

        /// <summary>
        /// Contains the on-premises security identifier (SID) for the group that was synchronized from on-premises to the cloud.
        /// Returned by default. Supports $filter on null values. Read-only.
        /// </summary>
        public string OnPremisesSecurityIdentifier { get => this._onPremisesSecurityIdentifier; set => this._onPremisesSecurityIdentifier = value; }

        /// <summary>Backing field for <see cref="OnPremisesSyncEnabled" /> property.</summary>
        private bool? _onPremisesSyncEnabled;

        /// <summary>
        /// true if this group is synced from an on-premises directory; false if this group was originally synced from an on-premises
        /// directory but is no longer synced; null if this object has never been synced from an on-premises directory (default).
        /// Returned by default. Read-only. Supports $filter (eq, ne, NOT, in).
        /// </summary>
        public bool? OnPremisesSyncEnabled { get => this._onPremisesSyncEnabled; set => this._onPremisesSyncEnabled = value; }

        /// <summary>Backing field for <see cref="Onenote" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgOnenote _onenote;

        /// <summary>onenote</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgOnenote Onenote { get => (this._onenote = this._onenote ?? new Microsoft.Graph.PowerShell.Users.Models.MgOnenote()); set => this._onenote = value; }

        /// <summary>Backing field for <see cref="Owners" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] _owners;

        /// <summary>
        /// The owners of the group. The owners are a set of non-admin users who are allowed to modify this object. HTTP Methods:
        /// GET (supported for all groups), POST (supported for security groups and mail-enabled security groups), DELETE (supported
        /// only for security groups) Read-only. Nullable. Supports $expand.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] Owners { get => this._owners; set => this._owners = value; }

        /// <summary>Backing field for <see cref="PermissionGrants" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgResourceSpecificPermissionGrant[] _permissionGrants;

        /// <summary>
        /// The permissions that have been granted for a group to a specific application. Supports $expand.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgResourceSpecificPermissionGrant[] PermissionGrants { get => this._permissionGrants; set => this._permissionGrants = value; }

        /// <summary>Backing field for <see cref="Photo" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgProfilePhoto _photo;

        /// <summary>profilePhoto</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgProfilePhoto Photo { get => (this._photo = this._photo ?? new Microsoft.Graph.PowerShell.Users.Models.MgProfilePhoto()); set => this._photo = value; }

        /// <summary>Backing field for <see cref="Photos" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgProfilePhoto[] _photos;

        /// <summary>The profile photos owned by the group. Read-only. Nullable.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgProfilePhoto[] Photos { get => this._photos; set => this._photos = value; }

        /// <summary>Backing field for <see cref="Planner" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgPlannerGroup _planner;

        /// <summary>plannerGroup</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgPlannerGroup Planner { get => (this._planner = this._planner ?? new Microsoft.Graph.PowerShell.Users.Models.MgPlannerGroup()); set => this._planner = value; }

        /// <summary>Backing field for <see cref="PreferredDataLocation" /> property.</summary>
        private string _preferredDataLocation;

        /// <summary>
        /// The preferred data location for the group. For more information, see OneDrive Online Multi-Geo. Returned by default.
        /// </summary>
        public string PreferredDataLocation { get => this._preferredDataLocation; set => this._preferredDataLocation = value; }

        /// <summary>Backing field for <see cref="PreferredLanguage" /> property.</summary>
        private string _preferredLanguage;

        /// <summary>
        /// The preferred language for a Microsoft 365 group. Should follow ISO 639-1 Code; for example 'en-US'. Returned by default.
        /// Supports $filter (eq, ne, NOT, ge, le, in, startsWith).
        /// </summary>
        public string PreferredLanguage { get => this._preferredLanguage; set => this._preferredLanguage = value; }

        /// <summary>Backing field for <see cref="ProxyAddresses" /> property.</summary>
        private string[] _proxyAddresses;

        /// <summary>
        /// Email addresses for the group that direct to the same group mailbox. For example: ['SMTP: bob@contoso.com', 'smtp: bob@sales.contoso.com'].
        /// The any operator is required for filter expressions on multi-valued properties. Returned by default. Read-only. Not nullable.
        /// Supports $filter (eq, NOT, ge, le, startsWith).
        /// </summary>
        public string[] ProxyAddresses { get => this._proxyAddresses; set => this._proxyAddresses = value; }

        /// <summary>Backing field for <see cref="RejectedSenders" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] _rejectedSenders;

        /// <summary>
        /// The list of users or groups that are not allowed to create posts or calendar events in this group. Nullable
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] RejectedSenders { get => this._rejectedSenders; set => this._rejectedSenders = value; }

        /// <summary>Backing field for <see cref="RenewedDateTime" /> property.</summary>
        private global::System.DateTime? _renewedDateTime;

        /// <summary>
        /// Timestamp of when the group was last renewed. This cannot be modified directly and is only updated via the renew service
        /// action. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example,
        /// midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Supports $filter (eq, ne, NOT, ge, le, in).
        /// Read-only.
        /// </summary>
        public global::System.DateTime? RenewedDateTime { get => this._renewedDateTime; set => this._renewedDateTime = value; }

        /// <summary>Backing field for <see cref="ResourceBehaviorOptions" /> property.</summary>
        private string[] _resourceBehaviorOptions;

        /// <summary>
        /// Specifies the group behaviors that can be set for a Microsoft 365 group during creation. This can be set only as part
        /// of creation (POST). Possible values are AllowOnlyMembersToPost, HideGroupInOutlook, SubscribeNewGroupMembers, WelcomeEmailDisabled.
        /// For more information, see Set Microsoft 365 group behaviors and provisioning options.
        /// </summary>
        public string[] ResourceBehaviorOptions { get => this._resourceBehaviorOptions; set => this._resourceBehaviorOptions = value; }

        /// <summary>Backing field for <see cref="ResourceProvisioningOptions" /> property.</summary>
        private string[] _resourceProvisioningOptions;

        /// <summary>
        /// Specifies the group resources that are provisioned as part of Microsoft 365 group creation, that are not normally part
        /// of default group creation. Possible value is Team. For more information, see Set Microsoft 365 group behaviors and provisioning
        /// options.
        /// </summary>
        public string[] ResourceProvisioningOptions { get => this._resourceProvisioningOptions; set => this._resourceProvisioningOptions = value; }

        /// <summary>Backing field for <see cref="SecurityEnabled" /> property.</summary>
        private bool? _securityEnabled;

        /// <summary>
        /// Specifies whether the group is a security group. Returned by default. Supports $filter (eq, ne, NOT, in).
        /// </summary>
        public bool? SecurityEnabled { get => this._securityEnabled; set => this._securityEnabled = value; }

        /// <summary>Backing field for <see cref="SecurityIdentifier" /> property.</summary>
        private string _securityIdentifier;

        /// <summary>
        /// Security identifier of the group, used in Windows scenarios. Returned by default.
        /// </summary>
        public string SecurityIdentifier { get => this._securityIdentifier; set => this._securityIdentifier = value; }

        /// <summary>Backing field for <see cref="Settings" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDirectorySetting[] _settings;

        /// <summary>
        /// Settings that can govern this group's behavior, like whether members can invite guest users to the group. Nullable.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDirectorySetting[] Settings { get => this._settings; set => this._settings = value; }

        /// <summary>Backing field for <see cref="Sites" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgSite[] _sites;

        /// <summary>
        /// The list of SharePoint sites in this group. Access the default site with /sites/root.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgSite[] Sites { get => this._sites; set => this._sites = value; }

        /// <summary>Backing field for <see cref="Team" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgTeam _team;

        /// <summary>team</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgTeam Team { get => (this._team = this._team ?? new Microsoft.Graph.PowerShell.Users.Models.MgTeam()); set => this._team = value; }

        /// <summary>Backing field for <see cref="Theme" /> property.</summary>
        private string _theme;

        /// <summary>
        /// Specifies a Microsoft 365 group's color theme. Possible values are Teal, Purple, Green, Blue, Pink, Orange or Red. Returned
        /// by default.
        /// </summary>
        public string Theme { get => this._theme; set => this._theme = value; }

        /// <summary>Backing field for <see cref="Threads" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgConversationThread[] _threads;

        /// <summary>The group's conversation threads. Nullable.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgConversationThread[] Threads { get => this._threads; set => this._threads = value; }

        /// <summary>Backing field for <see cref="TransitiveMemberOf" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] _transitiveMemberOf;

        public Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] TransitiveMemberOf { get => this._transitiveMemberOf; set => this._transitiveMemberOf = value; }

        /// <summary>Backing field for <see cref="TransitiveMembers" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] _transitiveMembers;

        public Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] TransitiveMembers { get => this._transitiveMembers; set => this._transitiveMembers = value; }

        /// <summary>Backing field for <see cref="UnseenConversationsCount" /> property.</summary>
        private int? _unseenConversationsCount;

        /// <summary>
        /// Count of conversations that have been delivered one or more new posts since the signed-in user's last visit to the group.
        /// This property is the same as unseenCount. Returned only on $select.
        /// </summary>
        public int? UnseenConversationsCount { get => this._unseenConversationsCount; set => this._unseenConversationsCount = value; }

        /// <summary>Backing field for <see cref="UnseenCount" /> property.</summary>
        private int? _unseenCount;

        /// <summary>
        /// Count of conversations that have received new posts since the signed-in user last visited the group. This property is
        /// the same as unseenConversationsCount.Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).
        /// </summary>
        public int? UnseenCount { get => this._unseenCount; set => this._unseenCount = value; }

        /// <summary>Backing field for <see cref="UnseenMessagesCount" /> property.</summary>
        private int? _unseenMessagesCount;

        /// <summary>
        /// Count of new posts that have been delivered to the group's conversations since the signed-in user's last visit to the
        /// group. Returned only on $select.
        /// </summary>
        public int? UnseenMessagesCount { get => this._unseenMessagesCount; set => this._unseenMessagesCount = value; }

        /// <summary>Backing field for <see cref="Visibility" /> property.</summary>
        private string _visibility;

        /// <summary>
        /// Specifies the group join policy and group content visibility for groups. Possible values are: Private, Public, or Hiddenmembership.
        /// Hiddenmembership can be set only for Microsoft 365 groups, when the groups are created. It can't be updated later. Other
        /// values of visibility can be updated after group creation. If visibility value is not specified during group creation on
        /// Microsoft Graph, a security group is created as Private by default and Microsoft 365 group is Public. See group visibility
        /// options to learn more. Returned by default.
        /// </summary>
        public string Visibility { get => this._visibility; set => this._visibility = value; }

    }
}