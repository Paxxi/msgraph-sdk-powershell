// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>userActivity</summary>
    public partial class MgUserActivity
    {

        /// <summary>Backing field for <see cref="ActivationUrl" /> property.</summary>
        private string _activationUrl;

        /// <summary>
        /// Required. URL used to launch the activity in the best native experience represented by the appId. Might launch a web-based
        /// app if no native app exists.
        /// </summary>
        public string ActivationUrl { get => this._activationUrl; set => this._activationUrl = value; }

        /// <summary>Backing field for <see cref="ActivitySourceHost" /> property.</summary>
        private string _activitySourceHost;

        /// <summary>
        /// Required. URL for the domain representing the cross-platform identity mapping for the app. Mapping is stored either as
        /// a JSON file hosted on the domain or configurable via Windows Dev Center. The JSON file is named cross-platform-app-identifiers
        /// and is hosted at root of your HTTPS domain, either at the top level domain or include a sub domain. For example: https://contoso.com
        /// or https://myapp.contoso.com but NOT https://myapp.contoso.com/somepath. You must have a unique file and domain (or sub
        /// domain) per cross-platform app identity. For example, a separate file and domain is needed for Word vs. PowerPoint.
        /// </summary>
        public string ActivitySourceHost { get => this._activitySourceHost; set => this._activitySourceHost = value; }

        /// <summary>Backing field for <see cref="AppActivityId" /> property.</summary>
        private string _appActivityId;

        /// <summary>
        /// Required. The unique activity ID in the context of the app - supplied by caller and immutable thereafter.
        /// </summary>
        public string AppActivityId { get => this._appActivityId; set => this._appActivityId = value; }

        /// <summary>Backing field for <see cref="AppDisplayName" /> property.</summary>
        private string _appDisplayName;

        /// <summary>
        /// Optional. Short text description of the app used to generate the activity for use in cases when the app is not installed
        /// on the userâ€™s local device.
        /// </summary>
        public string AppDisplayName { get => this._appDisplayName; set => this._appDisplayName = value; }

        /// <summary>Backing field for <see cref="ContentInfo" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgJson _contentInfo;

        /// <summary>Json</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgJson ContentInfo { get => (this._contentInfo = this._contentInfo ?? new Microsoft.Graph.PowerShell.Users.Models.MgJson()); set => this._contentInfo = value; }

        /// <summary>Backing field for <see cref="ContentUrl" /> property.</summary>
        private string _contentUrl;

        /// <summary>
        /// Optional. Used in the event the content can be rendered outside of a native or web-based app experience (for example,
        /// a pointer to an item in an RSS feed).
        /// </summary>
        public string ContentUrl { get => this._contentUrl; set => this._contentUrl = value; }

        /// <summary>Backing field for <see cref="CreatedDateTime" /> property.</summary>
        private global::System.DateTime? _createdDateTime;

        /// <summary>Set by the server. DateTime in UTC when the object was created on the server.</summary>
        public global::System.DateTime? CreatedDateTime { get => this._createdDateTime; set => this._createdDateTime = value; }

        /// <summary>Backing field for <see cref="ExpirationDateTime" /> property.</summary>
        private global::System.DateTime? _expirationDateTime;

        /// <summary>Set by the server. DateTime in UTC when the object expired on the server.</summary>
        public global::System.DateTime? ExpirationDateTime { get => this._expirationDateTime; set => this._expirationDateTime = value; }

        /// <summary>Backing field for <see cref="FallbackUrl" /> property.</summary>
        private string _fallbackUrl;

        /// <summary>Optional. URL used to launch the activity in a web-based app, if available.</summary>
        public string FallbackUrl { get => this._fallbackUrl; set => this._fallbackUrl = value; }

        /// <summary>Backing field for <see cref="HistoryItems" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgActivityHistoryItem[] _historyItems;

        /// <summary>
        /// Optional. NavigationProperty/Containment; navigation property to the activity's historyItems.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgActivityHistoryItem[] HistoryItems { get => this._historyItems; set => this._historyItems = value; }

        /// <summary>Read-only.</summary>
        public string Id { get; set; }

        /// <summary>Backing field for <see cref="LastModifiedDateTime" /> property.</summary>
        private global::System.DateTime? _lastModifiedDateTime;

        /// <summary>Set by the server. DateTime in UTC when the object was modified on the server.</summary>
        public global::System.DateTime? LastModifiedDateTime { get => this._lastModifiedDateTime; set => this._lastModifiedDateTime = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private string _status;

        /// <summary>status</summary>
        public string Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="UserTimezone" /> property.</summary>
        private string _userTimezone;

        /// <summary>
        /// Optional. The timezone in which the user's device used to generate the activity was located at activity creation time;
        /// values supplied as Olson IDs in order to support cross-platform representation.
        /// </summary>
        public string UserTimezone { get => this._userTimezone; set => this._userTimezone = value; }

        /// <summary>Backing field for <see cref="VisualElements" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgVisualInfo _visualElements;

        /// <summary>visualInfo</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgVisualInfo VisualElements { get => (this._visualElements = this._visualElements ?? new Microsoft.Graph.PowerShell.Users.Models.MgVisualInfo()); set => this._visualElements = value; }

    }
}