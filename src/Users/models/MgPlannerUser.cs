// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>plannerUser</summary>
    public partial class MgPlannerUser
    {

        /// <summary>Backing field for <see cref="All" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgPlannerDelta[] _all;

        public Microsoft.Graph.PowerShell.Users.Models.MgPlannerDelta[] All { get => this._all; set => this._all = value; }

        /// <summary>Backing field for <see cref="FavoritePlanReferences" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgPlannerFavoritePlanReferenceCollection _favoritePlanReferences;

        /// <summary>plannerFavoritePlanReferenceCollection</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgPlannerFavoritePlanReferenceCollection FavoritePlanReferences { get => (this._favoritePlanReferences = this._favoritePlanReferences ?? new Microsoft.Graph.PowerShell.Users.Models.MgPlannerFavoritePlanReferenceCollection()); set => this._favoritePlanReferences = value; }

        /// <summary>Backing field for <see cref="FavoritePlans" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgPlannerPlan[] _favoritePlans;

        /// <summary>
        /// Read-only. Nullable. Returns the plannerPlans that the user marked as favorites.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgPlannerPlan[] FavoritePlans { get => this._favoritePlans; set => this._favoritePlans = value; }

        /// <summary>Read-only.</summary>
        public string Id { get; set; }

        /// <summary>Backing field for <see cref="Plans" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgPlannerPlan[] _plans;

        /// <summary>Read-only. Nullable. Returns the plannerTasks assigned to the user.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgPlannerPlan[] Plans { get => this._plans; set => this._plans = value; }

        /// <summary>Backing field for <see cref="RecentPlanReferences" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgPlannerRecentPlanReferenceCollection _recentPlanReferences;

        /// <summary>plannerRecentPlanReferenceCollection</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgPlannerRecentPlanReferenceCollection RecentPlanReferences { get => (this._recentPlanReferences = this._recentPlanReferences ?? new Microsoft.Graph.PowerShell.Users.Models.MgPlannerRecentPlanReferenceCollection()); set => this._recentPlanReferences = value; }

        /// <summary>Backing field for <see cref="RecentPlans" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgPlannerPlan[] _recentPlans;

        /// <summary>
        /// Read-only. Nullable. Returns the plannerPlans that have been recently viewed by the user in apps that support recent plans.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgPlannerPlan[] RecentPlans { get => this._recentPlans; set => this._recentPlans = value; }

        /// <summary>Backing field for <see cref="RosterPlans" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgPlannerPlan[] _rosterPlans;

        /// <summary>
        /// Read-only. Nullable. Returns the plannerPlans contained by the plannerRosters the user is a member.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgPlannerPlan[] RosterPlans { get => this._rosterPlans; set => this._rosterPlans = value; }

        /// <summary>Backing field for <see cref="Tasks" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgPlannerTask[] _tasks;

        /// <summary>Read-only. Nullable. Returns the plannerTasks assigned to the user.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgPlannerTask[] Tasks { get => this._tasks; set => this._tasks = value; }

    }
}