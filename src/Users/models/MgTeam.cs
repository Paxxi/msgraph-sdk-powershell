// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>team</summary>
    public partial class MgTeam
    {

        /// <summary>Backing field for <see cref="Channels" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgChannel[] _channels;

        /// <summary>The collection of channels & messages associated with the team.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgChannel[] Channels { get => this._channels; set => this._channels = value; }

        /// <summary>Backing field for <see cref="Classification" /> property.</summary>
        private string _classification;

        /// <summary>
        /// An optional label. Typically describes the data or business sensitivity of the team. Must match one of a pre-configured
        /// set in the tenant's directory.
        /// </summary>
        public string Classification { get => this._classification; set => this._classification = value; }

        /// <summary>Backing field for <see cref="CreatedDateTime" /> property.</summary>
        private global::System.DateTime? _createdDateTime;

        /// <summary>Timestamp at which the team was created.</summary>
        public global::System.DateTime? CreatedDateTime { get => this._createdDateTime; set => this._createdDateTime = value; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>An optional description for the team. Maximum length: 1024 characters.</summary>
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="DiscoverySettings" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgTeamDiscoverySettings _discoverySettings;

        /// <summary>teamDiscoverySettings</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgTeamDiscoverySettings DiscoverySettings { get => (this._discoverySettings = this._discoverySettings ?? new Microsoft.Graph.PowerShell.Users.Models.MgTeamDiscoverySettings()); set => this._discoverySettings = value; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>The name of the team.</summary>
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="FunSettings" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgTeamFunSettings _funSettings;

        /// <summary>teamFunSettings</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgTeamFunSettings FunSettings { get => (this._funSettings = this._funSettings ?? new Microsoft.Graph.PowerShell.Users.Models.MgTeamFunSettings()); set => this._funSettings = value; }

        /// <summary>Backing field for <see cref="Group" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgGroup _group;

        /// <summary>
        /// Represents an Azure Active Directory object. The directoryObject type is the base type for many other directory entity
        /// types.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgGroup Group { get => (this._group = this._group ?? new Microsoft.Graph.PowerShell.Users.Models.MgGroup()); set => this._group = value; }

        /// <summary>Backing field for <see cref="GuestSettings" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgTeamGuestSettings _guestSettings;

        /// <summary>teamGuestSettings</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgTeamGuestSettings GuestSettings { get => (this._guestSettings = this._guestSettings ?? new Microsoft.Graph.PowerShell.Users.Models.MgTeamGuestSettings()); set => this._guestSettings = value; }

        /// <summary>Read-only.</summary>
        public string Id { get; set; }

        /// <summary>Backing field for <see cref="InstalledApps" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgTeamsAppInstallation[] _installedApps;

        /// <summary>The apps installed in this team.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgTeamsAppInstallation[] InstalledApps { get => this._installedApps; set => this._installedApps = value; }

        /// <summary>Backing field for <see cref="InternalId" /> property.</summary>
        private string _internalId;

        /// <summary>
        /// A unique ID for the team that has been used in a few places such as the audit log/Office 365 Management Activity API.
        /// </summary>
        public string InternalId { get => this._internalId; set => this._internalId = value; }

        /// <summary>Backing field for <see cref="IsArchived" /> property.</summary>
        private bool? _isArchived;

        /// <summary>Whether this team is in read-only mode.</summary>
        public bool? IsArchived { get => this._isArchived; set => this._isArchived = value; }

        /// <summary>Backing field for <see cref="IsMembershipLimitedToOwners" /> property.</summary>
        private bool? _isMembershipLimitedToOwners;

        /// <summary>
        /// If set to true, the team is currently in the owner-only team membership state and not accessible by other team members,
        /// such as students.
        /// </summary>
        public bool? IsMembershipLimitedToOwners { get => this._isMembershipLimitedToOwners; set => this._isMembershipLimitedToOwners = value; }

        /// <summary>Backing field for <see cref="MemberSettings" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgTeamMemberSettings _memberSettings;

        /// <summary>teamMemberSettings</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgTeamMemberSettings MemberSettings { get => (this._memberSettings = this._memberSettings ?? new Microsoft.Graph.PowerShell.Users.Models.MgTeamMemberSettings()); set => this._memberSettings = value; }

        /// <summary>Backing field for <see cref="Members" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgConversationMember[] _members;

        /// <summary>Members and owners of the team.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgConversationMember[] Members { get => this._members; set => this._members = value; }

        /// <summary>Backing field for <see cref="MessagingSettings" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgTeamMessagingSettings _messagingSettings;

        /// <summary>teamMessagingSettings</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgTeamMessagingSettings MessagingSettings { get => (this._messagingSettings = this._messagingSettings ?? new Microsoft.Graph.PowerShell.Users.Models.MgTeamMessagingSettings()); set => this._messagingSettings = value; }

        /// <summary>Backing field for <see cref="Operations" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgTeamsAsyncOperation[] _operations;

        /// <summary>The async operations that ran or are running on this team.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgTeamsAsyncOperation[] Operations { get => this._operations; set => this._operations = value; }

        /// <summary>Backing field for <see cref="Owners" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgUser[] _owners;

        /// <summary>
        /// The list of this team's owners. Currently, when creating a team using application permissions, exactly one owner must
        /// be specified. When using user delegated permissions, no owner can be specified (the current user is the owner). Owner
        /// must be specified as an object ID (GUID), not a UPN.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgUser[] Owners { get => this._owners; set => this._owners = value; }

        /// <summary>Backing field for <see cref="PermissionGrants" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgResourceSpecificPermissionGrant[] _permissionGrants;

        /// <summary>A collection of permissions granted to apps to access the team.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgResourceSpecificPermissionGrant[] PermissionGrants { get => this._permissionGrants; set => this._permissionGrants = value; }

        /// <summary>Backing field for <see cref="Photo" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgProfilePhoto _photo;

        /// <summary>profilePhoto</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgProfilePhoto Photo { get => (this._photo = this._photo ?? new Microsoft.Graph.PowerShell.Users.Models.MgProfilePhoto()); set => this._photo = value; }

        /// <summary>Backing field for <see cref="PrimaryChannel" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgChannel _primaryChannel;

        /// <summary>channel</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgChannel PrimaryChannel { get => (this._primaryChannel = this._primaryChannel ?? new Microsoft.Graph.PowerShell.Users.Models.MgChannel()); set => this._primaryChannel = value; }

        /// <summary>Backing field for <see cref="Schedule" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgSchedule _schedule;

        /// <summary>schedule</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgSchedule Schedule { get => (this._schedule = this._schedule ?? new Microsoft.Graph.PowerShell.Users.Models.MgSchedule()); set => this._schedule = value; }

        /// <summary>Backing field for <see cref="Specialization" /> property.</summary>
        private string _specialization;

        /// <summary>teamSpecialization</summary>
        public string Specialization { get => this._specialization; set => this._specialization = value; }

        /// <summary>Backing field for <see cref="Tags" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgTeamworkTag[] _tags;

        /// <summary>The tags associated with the team.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgTeamworkTag[] Tags { get => this._tags; set => this._tags = value; }

        /// <summary>Backing field for <see cref="Template" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgTeamsTemplate _template;

        /// <summary>teamsTemplate</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgTeamsTemplate Template { get => (this._template = this._template ?? new Microsoft.Graph.PowerShell.Users.Models.MgTeamsTemplate()); set => this._template = value; }

        /// <summary>Backing field for <see cref="Visibility" /> property.</summary>
        private string _visibility;

        /// <summary>teamVisibilityType</summary>
        public string Visibility { get => this._visibility; set => this._visibility = value; }

        /// <summary>Backing field for <see cref="WebUrl" /> property.</summary>
        private string _webUrl;

        /// <summary>
        /// A hyperlink that will go to the team in the Microsoft Teams client. This is the URL that you get when you right-click
        /// a team in the Microsoft Teams client and select Get link to team. This URL should be treated as an opaque blob, and not
        /// parsed.
        /// </summary>
        public string WebUrl { get => this._webUrl; set => this._webUrl = value; }

    }
}