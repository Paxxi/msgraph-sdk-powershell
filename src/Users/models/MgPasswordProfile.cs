// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>passwordProfile</summary>
    public partial class MgPasswordProfile
    {

        /// <summary>Backing field for <see cref="ForceChangePasswordNextSignIn" /> property.</summary>
        private bool? _forceChangePasswordNextSignIn;

        /// <summary>
        /// true if the user must change her password on the next login; otherwise false. If not set, default is false. NOTE: For
        /// Azure B2C tenants, set to false and instead use custom policies and user flows to force password reset at first sign in.
        /// See Force password reset at first logon.
        /// </summary>
        public bool? ForceChangePasswordNextSignIn { get => this._forceChangePasswordNextSignIn; set => this._forceChangePasswordNextSignIn = value; }

        /// <summary>Backing field for <see cref="ForceChangePasswordNextSignInWithMfa" /> property.</summary>
        private bool? _forceChangePasswordNextSignInWithMfa;

        /// <summary>
        /// If true, at next sign-in, the user must perform a multi-factor authentication (MFA) before being forced to change their
        /// password. The behavior is identical to forceChangePasswordNextSignIn except that the user is required to first perform
        /// a multi-factor authentication before password change. After a password change, this property will be automatically reset
        /// to false. If not set, default is false.
        /// </summary>
        public bool? ForceChangePasswordNextSignInWithMfa { get => this._forceChangePasswordNextSignInWithMfa; set => this._forceChangePasswordNextSignInWithMfa = value; }

        /// <summary>Backing field for <see cref="Password" /> property.</summary>
        private string _password;

        /// <summary>
        /// The password for the user. This property is required when a user is created. It can be updated, but the user will be required
        /// to change the password on the next login. The password must satisfy minimum requirements as specified by the userâ€™s passwordPolicies
        /// property. By default, a strong password is required.
        /// </summary>
        public string Password { get => this._password; set => this._password = value; }

    }
}