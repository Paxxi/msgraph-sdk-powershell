// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>calendar</summary>
    public partial class MgCalendar
    {

        /// <summary>Backing field for <see cref="AllowedOnlineMeetingProviders" /> property.</summary>
        private string[] _allowedOnlineMeetingProviders;

        /// <summary>
        /// Represent the online meeting service providers that can be used to create online meetings in this calendar. Possible values
        /// are: unknown, skypeForBusiness, skypeForConsumer, teamsForBusiness.
        /// </summary>
        public string[] AllowedOnlineMeetingProviders { get => this._allowedOnlineMeetingProviders; set => this._allowedOnlineMeetingProviders = value; }

        /// <summary>Backing field for <see cref="CalendarGroupId" /> property.</summary>
        private string _calendarGroupId;

        /// <summary>
        /// The calendarGroup in which to create the calendar. If the user has never explicitly set a group for the calendar, this
        /// property is null.
        /// </summary>
        public string CalendarGroupId { get => this._calendarGroupId; set => this._calendarGroupId = value; }

        /// <summary>Backing field for <see cref="CalendarPermissions" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgCalendarPermission[] _calendarPermissions;

        /// <summary>The permissions of the users with whom the calendar is shared.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgCalendarPermission[] CalendarPermissions { get => this._calendarPermissions; set => this._calendarPermissions = value; }

        /// <summary>Backing field for <see cref="CalendarView" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgEvent[] _calendarView;

        /// <summary>The calendar view for the calendar. Navigation property. Read-only.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgEvent[] CalendarView { get => this._calendarView; set => this._calendarView = value; }

        /// <summary>Backing field for <see cref="CanEdit" /> property.</summary>
        private bool? _canEdit;

        /// <summary>
        /// true if the user can write to the calendar, false otherwise. This property is true for the user who created the calendar.
        /// This property is also true for a user who has been shared a calendar and granted write access, through an Outlook client
        /// or the corresponding calendarPermission resource. Read-only.
        /// </summary>
        public bool? CanEdit { get => this._canEdit; set => this._canEdit = value; }

        /// <summary>Backing field for <see cref="CanShare" /> property.</summary>
        private bool? _canShare;

        /// <summary>
        /// true if the user has the permission to share the calendar, false otherwise. Only the user who created the calendar can
        /// share it. Read-only.
        /// </summary>
        public bool? CanShare { get => this._canShare; set => this._canShare = value; }

        /// <summary>Backing field for <see cref="CanViewPrivateItems" /> property.</summary>
        private bool? _canViewPrivateItems;

        /// <summary>
        /// true if the user can read calendar items that have been marked private, false otherwise. This property is set through
        /// an Outlook client or the corresponding calendarPermission resource. Read-only.
        /// </summary>
        public bool? CanViewPrivateItems { get => this._canViewPrivateItems; set => this._canViewPrivateItems = value; }

        /// <summary>Backing field for <see cref="ChangeKey" /> property.</summary>
        private string _changeKey;

        /// <summary>
        /// Identifies the version of the calendar object. Every time the calendar is changed, changeKey changes as well. This allows
        /// Exchange to apply changes to the correct version of the object. Read-only.
        /// </summary>
        public string ChangeKey { get => this._changeKey; set => this._changeKey = value; }

        /// <summary>Backing field for <see cref="Color" /> property.</summary>
        private string _color;

        /// <summary>calendarColor</summary>
        public string Color { get => this._color; set => this._color = value; }

        /// <summary>Backing field for <see cref="DefaultOnlineMeetingProvider" /> property.</summary>
        private string _defaultOnlineMeetingProvider;

        /// <summary>onlineMeetingProviderType</summary>
        public string DefaultOnlineMeetingProvider { get => this._defaultOnlineMeetingProvider; set => this._defaultOnlineMeetingProvider = value; }

        /// <summary>Backing field for <see cref="Events" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgEvent[] _events;

        /// <summary>The events in the calendar. Navigation property. Read-only.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgEvent[] Events { get => this._events; set => this._events = value; }

        /// <summary>Backing field for <see cref="HexColor" /> property.</summary>
        private string _hexColor;

        /// <summary>
        /// The calendar color, expressed in a hex color code of three hexadecimal values, each ranging from 00 to FF and representing
        /// the red, green, or blue components of the color in the RGB color space. If the user has never explicitly set a color for
        /// the calendar, this property is empty.
        /// </summary>
        public string HexColor { get => this._hexColor; set => this._hexColor = value; }

        /// <summary>Read-only.</summary>
        public string Id { get; set; }

        /// <summary>Backing field for <see cref="IsDefaultCalendar" /> property.</summary>
        private bool? _isDefaultCalendar;

        /// <summary>
        /// true if this is the default calendar where new events are created by default, false otherwise.
        /// </summary>
        public bool? IsDefaultCalendar { get => this._isDefaultCalendar; set => this._isDefaultCalendar = value; }

        /// <summary>Backing field for <see cref="IsRemovable" /> property.</summary>
        private bool? _isRemovable;

        /// <summary>Indicates whether this user calendar can be deleted from the user mailbox.</summary>
        public bool? IsRemovable { get => this._isRemovable; set => this._isRemovable = value; }

        /// <summary>Backing field for <see cref="IsShared" /> property.</summary>
        private bool? _isShared;

        /// <summary>
        /// true if the user has shared the calendar with other users, false otherwise. Since only the user who created the calendar
        /// can share it, isShared and isSharedWithMe cannot be true for the same user. This property is set when sharing is initiated
        /// in an Outlook client, and can be reset when the sharing is cancelled through the client or the corresponding calendarPermission
        /// resource. Read-only.
        /// </summary>
        public bool? IsShared { get => this._isShared; set => this._isShared = value; }

        /// <summary>Backing field for <see cref="IsSharedWithMe" /> property.</summary>
        private bool? _isSharedWithMe;

        /// <summary>
        /// true if the user has been shared this calendar, false otherwise. This property is always false for a calendar owner. This
        /// property is set when sharing is initiated in an Outlook client, and can be reset when the sharing is cancelled through
        /// the client or the corresponding calendarPermission resource. Read-only.
        /// </summary>
        public bool? IsSharedWithMe { get => this._isSharedWithMe; set => this._isSharedWithMe = value; }

        /// <summary>Backing field for <see cref="IsTallyingResponses" /> property.</summary>
        private bool? _isTallyingResponses;

        /// <summary>
        /// Indicates whether this user calendar supports tracking of meeting responses. Only meeting invites sent from users' primary
        /// calendars support tracking of meeting responses.
        /// </summary>
        public bool? IsTallyingResponses { get => this._isTallyingResponses; set => this._isTallyingResponses = value; }

        /// <summary>Backing field for <see cref="MultiValueExtendedProperties" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgMultiValueLegacyExtendedProperty[] _multiValueExtendedProperties;

        /// <summary>
        /// The collection of multi-value extended properties defined for the calendar. Read-only. Nullable.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgMultiValueLegacyExtendedProperty[] MultiValueExtendedProperties { get => this._multiValueExtendedProperties; set => this._multiValueExtendedProperties = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The calendar name.</summary>
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Owner" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgEmailAddress _owner;

        /// <summary>emailAddress</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgEmailAddress Owner { get => (this._owner = this._owner ?? new Microsoft.Graph.PowerShell.Users.Models.MgEmailAddress()); set => this._owner = value; }

        /// <summary>Backing field for <see cref="SingleValueExtendedProperties" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgSingleValueLegacyExtendedProperty[] _singleValueExtendedProperties;

        /// <summary>
        /// The collection of single-value extended properties defined for the calendar. Read-only. Nullable.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgSingleValueLegacyExtendedProperty[] SingleValueExtendedProperties { get => this._singleValueExtendedProperties; set => this._singleValueExtendedProperties = value; }

    }
}