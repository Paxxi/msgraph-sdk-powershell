// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>Represents an Azure Active Directory user object.</summary>
    public partial class MgUser
    {

        /// <summary>Backing field for <see cref="AboutMe" /> property.</summary>
        private string _aboutMe;

        /// <summary>
        /// A freeform text entry field for the user to describe themselves. Returned only on $select.
        /// </summary>
        public string AboutMe { get => this._aboutMe; set => this._aboutMe = value; }

        /// <summary>Backing field for <see cref="AccountEnabled" /> property.</summary>
        private bool? _accountEnabled;

        /// <summary>
        /// true if the account is enabled; otherwise, false. This property is required when a user is created. Supports $filter (eq,
        /// ne, NOT, and in).
        /// </summary>
        public bool? AccountEnabled { get => this._accountEnabled; set => this._accountEnabled = value; }

        /// <summary>Backing field for <see cref="Activities" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgUserActivity[] _activities;

        /// <summary>The user's activities across devices. Read-only. Nullable.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgUserActivity[] Activities { get => this._activities; set => this._activities = value; }

        /// <summary>Backing field for <see cref="AgeGroup" /> property.</summary>
        private string _ageGroup;

        /// <summary>
        /// Sets the age group of the user. Allowed values: null, minor, notAdult and adult. Refer to the legal age group property
        /// definitions for further information. Supports $filter (eq, ne, NOT, and in).
        /// </summary>
        public string AgeGroup { get => this._ageGroup; set => this._ageGroup = value; }

        /// <summary>Backing field for <see cref="AgreementAcceptances" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgAgreementAcceptance[] _agreementAcceptances;

        /// <summary>The user's terms of use acceptance statuses. Read-only. Nullable.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgAgreementAcceptance[] AgreementAcceptances { get => this._agreementAcceptances; set => this._agreementAcceptances = value; }

        /// <summary>Backing field for <see cref="Analytics" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgUserAnalytics _analytics;

        /// <summary>userAnalytics</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgUserAnalytics Analytics { get => (this._analytics = this._analytics ?? new Microsoft.Graph.PowerShell.Users.Models.MgUserAnalytics()); set => this._analytics = value; }

        /// <summary>Backing field for <see cref="AppConsentRequestsForApproval" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgAppConsentRequest[] _appConsentRequestsForApproval;

        public Microsoft.Graph.PowerShell.Users.Models.MgAppConsentRequest[] AppConsentRequestsForApproval { get => this._appConsentRequestsForApproval; set => this._appConsentRequestsForApproval = value; }

        /// <summary>Backing field for <see cref="AppRoleAssignments" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgAppRoleAssignment[] _appRoleAssignments;

        /// <summary>
        /// Represents the app roles a user has been granted for an application. Supports $expand.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgAppRoleAssignment[] AppRoleAssignments { get => this._appRoleAssignments; set => this._appRoleAssignments = value; }

        /// <summary>Backing field for <see cref="Approvals" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgApproval[] _approvals;

        public Microsoft.Graph.PowerShell.Users.Models.MgApproval[] Approvals { get => this._approvals; set => this._approvals = value; }

        /// <summary>Backing field for <see cref="AssignedLicenses" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgAssignedLicense[] _assignedLicenses;

        /// <summary>
        /// The licenses that are assigned to the user, including inherited (group-based) licenses. Not nullable. Supports $filter
        /// (eq and NOT).
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgAssignedLicense[] AssignedLicenses { get => this._assignedLicenses; set => this._assignedLicenses = value; }

        /// <summary>Backing field for <see cref="AssignedPlans" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgAssignedPlan[] _assignedPlans;

        /// <summary>
        /// The plans that are assigned to the user. Read-only. Not nullable.Supports $filter (eq and NOT).
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgAssignedPlan[] AssignedPlans { get => this._assignedPlans; set => this._assignedPlans = value; }

        /// <summary>Backing field for <see cref="Authentication" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgAuthentication _authentication;

        /// <summary>authentication</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgAuthentication Authentication { get => (this._authentication = this._authentication ?? new Microsoft.Graph.PowerShell.Users.Models.MgAuthentication()); set => this._authentication = value; }

        /// <summary>Backing field for <see cref="Birthday" /> property.</summary>
        private global::System.DateTime? _birthday;

        /// <summary>
        /// The birthday of the user. The Timestamp type represents date and time information using ISO 8601 format and is always
        /// in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z Returned only on $select.
        /// </summary>
        public global::System.DateTime? Birthday { get => this._birthday; set => this._birthday = value; }

        /// <summary>Backing field for <see cref="BusinessPhones" /> property.</summary>
        private string[] _businessPhones;

        /// <summary>
        /// The telephone numbers for the user. Only one number can be set for this property. Read-only for users synced from on-premises
        /// directory. Supports $filter (eq and NOT).
        /// </summary>
        public string[] BusinessPhones { get => this._businessPhones; set => this._businessPhones = value; }

        /// <summary>Backing field for <see cref="Calendar" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgCalendar _calendar;

        /// <summary>calendar</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgCalendar Calendar { get => (this._calendar = this._calendar ?? new Microsoft.Graph.PowerShell.Users.Models.MgCalendar()); set => this._calendar = value; }

        /// <summary>Backing field for <see cref="CalendarGroups" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgCalendarGroup[] _calendarGroups;

        /// <summary>The user's calendar groups. Read-only. Nullable.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgCalendarGroup[] CalendarGroups { get => this._calendarGroups; set => this._calendarGroups = value; }

        /// <summary>Backing field for <see cref="CalendarView" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgEvent[] _calendarView;

        /// <summary>The calendar view for the calendar. Read-only. Nullable.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgEvent[] CalendarView { get => this._calendarView; set => this._calendarView = value; }

        /// <summary>Backing field for <see cref="Calendars" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgCalendar[] _calendars;

        /// <summary>The user's calendars. Read-only. Nullable.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgCalendar[] Calendars { get => this._calendars; set => this._calendars = value; }

        /// <summary>Backing field for <see cref="Chats" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgChat[] _chats;

        public Microsoft.Graph.PowerShell.Users.Models.MgChat[] Chats { get => this._chats; set => this._chats = value; }

        /// <summary>Backing field for <see cref="City" /> property.</summary>
        private string _city;

        /// <summary>
        /// The city in which the user is located. Maximum length is 128 characters. Supports $filter (eq, ne, NOT, ge, le, in, startsWith).
        /// </summary>
        public string City { get => this._city; set => this._city = value; }

        /// <summary>Backing field for <see cref="CompanyName" /> property.</summary>
        private string _companyName;

        /// <summary>
        /// The company name which the user is associated. This property can be useful for describing the company that an external
        /// user comes from. The maximum length of the company name is 64 characters.Supports $filter (eq, ne, NOT, ge, le, in, startsWith).
        /// </summary>
        public string CompanyName { get => this._companyName; set => this._companyName = value; }

        /// <summary>Backing field for <see cref="ConsentProvidedForMinor" /> property.</summary>
        private string _consentProvidedForMinor;

        /// <summary>
        /// Sets whether consent has been obtained for minors. Allowed values: null, granted, denied and notRequired. Refer to the
        /// legal age group property definitions for further information. Supports $filter (eq, ne, NOT, and in).
        /// </summary>
        public string ConsentProvidedForMinor { get => this._consentProvidedForMinor; set => this._consentProvidedForMinor = value; }

        /// <summary>Backing field for <see cref="ContactFolders" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgContactFolder[] _contactFolders;

        /// <summary>The user's contacts folders. Read-only. Nullable.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgContactFolder[] ContactFolders { get => this._contactFolders; set => this._contactFolders = value; }

        /// <summary>Backing field for <see cref="Contacts" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgContact[] _contacts;

        /// <summary>The user's contacts. Read-only. Nullable.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgContact[] Contacts { get => this._contacts; set => this._contacts = value; }

        /// <summary>Backing field for <see cref="Country" /> property.</summary>
        private string _country;

        /// <summary>
        /// The country/region in which the user is located; for example, US or UK. Maximum length is 128 characters. Supports $filter
        /// (eq, ne, NOT, ge, le, in, startsWith).
        /// </summary>
        public string Country { get => this._country; set => this._country = value; }

        /// <summary>Backing field for <see cref="CreatedDateTime" /> property.</summary>
        private global::System.DateTime? _createdDateTime;

        /// <summary>
        /// The date and time the user was created. The value cannot be modified and is automatically populated when the entity is
        /// created. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time.
        /// Property is nullable. A null value indicates that an accurate creation time couldn't be determined for the user. Read-only.
        /// Supports $filter (eq, ne, NOT , ge, le, and in operators).
        /// </summary>
        public global::System.DateTime? CreatedDateTime { get => this._createdDateTime; set => this._createdDateTime = value; }

        /// <summary>Backing field for <see cref="CreatedObjects" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] _createdObjects;

        /// <summary>Directory objects that were created by the user. Read-only. Nullable.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] CreatedObjects { get => this._createdObjects; set => this._createdObjects = value; }

        /// <summary>Backing field for <see cref="CreationType" /> property.</summary>
        private string _creationType;

        /// <summary>
        /// Indicates whether the user account was created as a regular school or work account (null), an external account (Invitation),
        /// a local account for an Azure Active Directory B2C tenant (LocalAccount) or self-service sign-up using email verification
        /// (EmailVerified). Read-only. Supports $filter (eq, ne, NOT, and in).
        /// </summary>
        public string CreationType { get => this._creationType; set => this._creationType = value; }

        public global::System.DateTime? DeletedDateTime { get; set; }

        /// <summary>Backing field for <see cref="Department" /> property.</summary>
        private string _department;

        /// <summary>
        /// The name for the department in which the user works. Maximum length is 64 characters.Supports $filter (eq, ne, NOT , ge,
        /// le, and in operators).
        /// </summary>
        public string Department { get => this._department; set => this._department = value; }

        /// <summary>Backing field for <see cref="DeviceEnrollmentConfigurations" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDeviceEnrollmentConfiguration[] _deviceEnrollmentConfigurations;

        /// <summary>Get enrollment configurations targeted to the user</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDeviceEnrollmentConfiguration[] DeviceEnrollmentConfigurations { get => this._deviceEnrollmentConfigurations; set => this._deviceEnrollmentConfigurations = value; }

        /// <summary>Backing field for <see cref="DeviceEnrollmentLimit" /> property.</summary>
        private int? _deviceEnrollmentLimit;

        /// <summary>
        /// The limit on the maximum number of devices that the user is permitted to enroll. Allowed values are 5 or 1000.
        /// </summary>
        public int? DeviceEnrollmentLimit { get => this._deviceEnrollmentLimit; set => this._deviceEnrollmentLimit = value; }

        /// <summary>Backing field for <see cref="DeviceKeys" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDeviceKey[] _deviceKeys;

        public Microsoft.Graph.PowerShell.Users.Models.MgDeviceKey[] DeviceKeys { get => this._deviceKeys; set => this._deviceKeys = value; }

        /// <summary>
        /// Backing field for <see cref="DeviceManagementTroubleshootingEvents" /> property.
        /// </summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDeviceManagementTroubleshootingEvent[] _deviceManagementTroubleshootingEvents;

        /// <summary>The list of troubleshooting events for this user.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDeviceManagementTroubleshootingEvent[] DeviceManagementTroubleshootingEvents { get => this._deviceManagementTroubleshootingEvents; set => this._deviceManagementTroubleshootingEvents = value; }

        /// <summary>Backing field for <see cref="Devices" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDevice[] _devices;

        public Microsoft.Graph.PowerShell.Users.Models.MgDevice[] Devices { get => this._devices; set => this._devices = value; }

        /// <summary>Backing field for <see cref="DirectReports" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] _directReports;

        /// <summary>
        /// The users and contacts that report to the user. (The users and contacts that have their manager property set to this user.)
        /// Read-only. Nullable. Supports $expand.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] DirectReports { get => this._directReports; set => this._directReports = value; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>
        /// The name displayed in the address book for the user. This value is usually the combination of the user's first name, middle
        /// initial, and last name. This property is required when a user is created and it cannot be cleared during updates. Maximum
        /// length is 256 characters. Supports $filter (eq, ne, NOT , ge, le, in, startsWith), $orderBy, and $search.
        /// </summary>
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="Drive" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDrive _drive;

        /// <summary>drive</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDrive Drive { get => (this._drive = this._drive ?? new Microsoft.Graph.PowerShell.Users.Models.MgDrive()); set => this._drive = value; }

        /// <summary>Backing field for <see cref="Drives" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDrive[] _drives;

        /// <summary>A collection of drives available for this user. Read-only.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDrive[] Drives { get => this._drives; set => this._drives = value; }

        /// <summary>Backing field for <see cref="EmployeeHireDate" /> property.</summary>
        private global::System.DateTime? _employeeHireDate;

        /// <summary>
        /// The date and time when the user was hired or will start work in case of a future hire. Supports $filter (eq, ne, NOT ,
        /// ge, le, in).
        /// </summary>
        public global::System.DateTime? EmployeeHireDate { get => this._employeeHireDate; set => this._employeeHireDate = value; }

        /// <summary>Backing field for <see cref="EmployeeId" /> property.</summary>
        private string _employeeId;

        /// <summary>
        /// The employee identifier assigned to the user by the organization. Supports $filter (eq, ne, NOT , ge, le, in, startsWith).
        /// </summary>
        public string EmployeeId { get => this._employeeId; set => this._employeeId = value; }

        /// <summary>Backing field for <see cref="EmployeeOrgData" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgEmployeeOrgData _employeeOrgData;

        /// <summary>employeeOrgData</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgEmployeeOrgData EmployeeOrgData { get => (this._employeeOrgData = this._employeeOrgData ?? new Microsoft.Graph.PowerShell.Users.Models.MgEmployeeOrgData()); set => this._employeeOrgData = value; }

        /// <summary>Backing field for <see cref="EmployeeType" /> property.</summary>
        private string _employeeType;

        /// <summary>
        /// Captures enterprise worker type. For example, Employee, Contractor, Consultant, or Vendor. Supports $filter (eq, ne, NOT
        /// , ge, le, in, startsWith).
        /// </summary>
        public string EmployeeType { get => this._employeeType; set => this._employeeType = value; }

        /// <summary>Backing field for <see cref="Events" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgEvent[] _events;

        /// <summary>
        /// The user's events. Default is to show events under the Default Calendar. Read-only. Nullable.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgEvent[] Events { get => this._events; set => this._events = value; }

        /// <summary>Backing field for <see cref="Extensions" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgExtension[] _extensions;

        /// <summary>The collection of open extensions defined for the user. Nullable.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgExtension[] Extensions { get => this._extensions; set => this._extensions = value; }

        /// <summary>Backing field for <see cref="ExternalUserState" /> property.</summary>
        private string _externalUserState;

        /// <summary>
        /// For an external user invited to the tenant using the invitation API, this property represents the invited user's invitation
        /// status. For invited users, the state can be PendingAcceptance or Accepted, or null for all other users. Supports $filter
        /// (eq, ne, NOT , in).
        /// </summary>
        public string ExternalUserState { get => this._externalUserState; set => this._externalUserState = value; }

        /// <summary>Backing field for <see cref="ExternalUserStateChangeDateTime" /> property.</summary>
        private string _externalUserStateChangeDateTime;

        /// <summary>
        /// Shows the timestamp for the latest change to the externalUserState property. Supports $filter (eq, ne, NOT , in).
        /// </summary>
        public string ExternalUserStateChangeDateTime { get => this._externalUserStateChangeDateTime; set => this._externalUserStateChangeDateTime = value; }

        /// <summary>Backing field for <see cref="FaxNumber" /> property.</summary>
        private string _faxNumber;

        /// <summary>
        /// The fax number of the user. Supports $filter (eq, ne, NOT , ge, le, in, startsWith).
        /// </summary>
        public string FaxNumber { get => this._faxNumber; set => this._faxNumber = value; }

        /// <summary>Backing field for <see cref="FollowedSites" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgSite[] _followedSites;

        public Microsoft.Graph.PowerShell.Users.Models.MgSite[] FollowedSites { get => this._followedSites; set => this._followedSites = value; }

        /// <summary>Backing field for <see cref="GivenName" /> property.</summary>
        private string _givenName;

        /// <summary>
        /// The given name (first name) of the user. Maximum length is 64 characters. Supports $filter (eq, ne, NOT , ge, le, in,
        /// startsWith).
        /// </summary>
        public string GivenName { get => this._givenName; set => this._givenName = value; }

        /// <summary>Backing field for <see cref="HireDate" /> property.</summary>
        private global::System.DateTime? _hireDate;

        /// <summary>
        /// The hire date of the user. The Timestamp type represents date and time information using ISO 8601 format and is always
        /// in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned only on $select. Note: This property
        /// is specific to SharePoint Online. We recommend using the native employeeHireDate property to set and update hire date
        /// values using Microsoft Graph APIs.
        /// </summary>
        public global::System.DateTime? HireDate { get => this._hireDate; set => this._hireDate = value; }

        /// <summary>Read-only.</summary>
        public string Id { get; set; }

        /// <summary>Backing field for <see cref="Identities" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgObjectIdentity[] _identities;

        /// <summary>
        /// Represents the identities that can be used to sign in to this user account. An identity can be provided by Microsoft (also
        /// known as a local account), by organizations, or by social identity providers such as Facebook, Google, and Microsoft,
        /// and tied to a user account. May contain multiple items with the same signInType value. Supports $filter (eq) only where
        /// the signInType is not userPrincipalName.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgObjectIdentity[] Identities { get => this._identities; set => this._identities = value; }

        /// <summary>Backing field for <see cref="ImAddresses" /> property.</summary>
        private string[] _imAddresses;

        /// <summary>
        /// The instant message voice over IP (VOIP) session initiation protocol (SIP) addresses for the user. Read-only. Supports
        /// $filter (eq, NOT, ge, le, startsWith).
        /// </summary>
        public string[] ImAddresses { get => this._imAddresses; set => this._imAddresses = value; }

        /// <summary>Backing field for <see cref="InferenceClassification" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgInferenceClassification _inferenceClassification;

        /// <summary>inferenceClassification</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgInferenceClassification InferenceClassification { get => (this._inferenceClassification = this._inferenceClassification ?? new Microsoft.Graph.PowerShell.Users.Models.MgInferenceClassification()); set => this._inferenceClassification = value; }

        /// <summary>Backing field for <see cref="InfoCatalogs" /> property.</summary>
        private string[] _infoCatalogs;

        /// <summary>
        /// Identifies the info segments assigned to the user. Supports $filter (eq, NOT, ge, le, startsWith).
        /// </summary>
        public string[] InfoCatalogs { get => this._infoCatalogs; set => this._infoCatalogs = value; }

        /// <summary>Backing field for <see cref="InformationProtection" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgInformationProtection _informationProtection;

        /// <summary>informationProtection</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgInformationProtection InformationProtection { get => (this._informationProtection = this._informationProtection ?? new Microsoft.Graph.PowerShell.Users.Models.MgInformationProtection()); set => this._informationProtection = value; }

        /// <summary>Backing field for <see cref="Insights" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgItemInsights _insights;

        /// <summary>itemInsights</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgItemInsights Insights { get => (this._insights = this._insights ?? new Microsoft.Graph.PowerShell.Users.Models.MgItemInsights()); set => this._insights = value; }

        /// <summary>Backing field for <see cref="Interests" /> property.</summary>
        private string[] _interests;

        /// <summary>A list for the user to describe their interests. Returned only on $select.</summary>
        public string[] Interests { get => this._interests; set => this._interests = value; }

        /// <summary>Backing field for <see cref="IsResourceAccount" /> property.</summary>
        private bool? _isResourceAccount;

        /// <summary>Do not use – reserved for future use.</summary>
        public bool? IsResourceAccount { get => this._isResourceAccount; set => this._isResourceAccount = value; }

        /// <summary>Backing field for <see cref="JobTitle" /> property.</summary>
        private string _jobTitle;

        /// <summary>
        /// The user's job title. Maximum length is 128 characters. Supports $filter (eq, ne, NOT , ge, le, in, startsWith).
        /// </summary>
        public string JobTitle { get => this._jobTitle; set => this._jobTitle = value; }

        /// <summary>Backing field for <see cref="JoinedGroups" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgGroup[] _joinedGroups;

        /// <summary>Read-only. Nullable.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgGroup[] JoinedGroups { get => this._joinedGroups; set => this._joinedGroups = value; }

        /// <summary>Backing field for <see cref="JoinedTeams" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgTeam[] _joinedTeams;

        /// <summary>The Microsoft Teams teams that the user is a member of. Read-only. Nullable.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgTeam[] JoinedTeams { get => this._joinedTeams; set => this._joinedTeams = value; }

        /// <summary>Backing field for <see cref="LastPasswordChangeDateTime" /> property.</summary>
        private global::System.DateTime? _lastPasswordChangeDateTime;

        /// <summary>
        /// The time when this Azure AD user last changed their password. The Timestamp type represents date and time information
        /// using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
        /// Returned only on $select.
        /// </summary>
        public global::System.DateTime? LastPasswordChangeDateTime { get => this._lastPasswordChangeDateTime; set => this._lastPasswordChangeDateTime = value; }

        /// <summary>Backing field for <see cref="LegalAgeGroupClassification" /> property.</summary>
        private string _legalAgeGroupClassification;

        /// <summary>
        /// Used by enterprise applications to determine the legal age group of the user. This property is read-only and calculated
        /// based on ageGroup and consentProvidedForMinor properties. Allowed values: null, minorWithOutParentalConsent, minorWithParentalConsent,
        /// minorNoParentalConsentRequired, notAdult and adult. Refer to the legal age group property definitions for further information.
        /// Returned only on $select.
        /// </summary>
        public string LegalAgeGroupClassification { get => this._legalAgeGroupClassification; set => this._legalAgeGroupClassification = value; }

        /// <summary>Backing field for <see cref="LicenseAssignmentStates" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgLicenseAssignmentState[] _licenseAssignmentStates;

        /// <summary>
        /// State of license assignments for this user. Read-only. Returned only on $select.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgLicenseAssignmentState[] LicenseAssignmentStates { get => this._licenseAssignmentStates; set => this._licenseAssignmentStates = value; }

        /// <summary>Backing field for <see cref="LicenseDetails" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgLicenseDetails[] _licenseDetails;

        /// <summary>A collection of this user's license details. Read-only.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgLicenseDetails[] LicenseDetails { get => this._licenseDetails; set => this._licenseDetails = value; }

        /// <summary>Backing field for <see cref="Mail" /> property.</summary>
        private string _mail;

        /// <summary>
        /// The SMTP address for the user, for example, admin@contoso.com. Changes to this property will also update the user's proxyAddresses
        /// collection to include the value as an SMTP address. While this property can contain accent characters, using them can
        /// cause access issues with other Microsoft applications for the user. Supports $filter (eq, ne, NOT, ge, le, in, startsWith,
        /// endsWith).
        /// </summary>
        public string Mail { get => this._mail; set => this._mail = value; }

        /// <summary>Backing field for <see cref="MailFolders" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgMailFolder[] _mailFolders;

        /// <summary>The user's mail folders. Read-only. Nullable.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgMailFolder[] MailFolders { get => this._mailFolders; set => this._mailFolders = value; }

        /// <summary>Backing field for <see cref="MailNickname" /> property.</summary>
        private string _mailNickname;

        /// <summary>
        /// The mail alias for the user. This property must be specified when a user is created. Maximum length is 64 characters.
        /// Supports $filter (eq, ne, NOT, ge, le, in, startsWith).
        /// </summary>
        public string MailNickname { get => this._mailNickname; set => this._mailNickname = value; }

        /// <summary>Backing field for <see cref="MailboxSettings" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgMailboxSettings _mailboxSettings;

        /// <summary>mailboxSettings</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgMailboxSettings MailboxSettings { get => (this._mailboxSettings = this._mailboxSettings ?? new Microsoft.Graph.PowerShell.Users.Models.MgMailboxSettings()); set => this._mailboxSettings = value; }

        /// <summary>Backing field for <see cref="ManagedAppRegistrations" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgManagedAppRegistration[] _managedAppRegistrations;

        /// <summary>Zero or more managed app registrations that belong to the user.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgManagedAppRegistration[] ManagedAppRegistrations { get => this._managedAppRegistrations; set => this._managedAppRegistrations = value; }

        /// <summary>Backing field for <see cref="ManagedDevices" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgManagedDevice[] _managedDevices;

        /// <summary>The managed devices associated with the user.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgManagedDevice[] ManagedDevices { get => this._managedDevices; set => this._managedDevices = value; }

        /// <summary>Backing field for <see cref="Manager" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject _manager;

        /// <summary>
        /// Represents an Azure Active Directory object. The directoryObject type is the base type for many other directory entity
        /// types.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject Manager { get => (this._manager = this._manager ?? new Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject()); set => this._manager = value; }

        /// <summary>Backing field for <see cref="MemberOf" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] _memberOf;

        /// <summary>
        /// The groups, directory roles and administrative units that the user is a member of. Read-only. Nullable. Supports $expand.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] MemberOf { get => this._memberOf; set => this._memberOf = value; }

        /// <summary>Backing field for <see cref="Messages" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgMessage[] _messages;

        /// <summary>The messages in a mailbox or folder. Read-only. Nullable.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgMessage[] Messages { get => this._messages; set => this._messages = value; }

        /// <summary>Backing field for <see cref="MobileAppIntentAndStates" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgMobileAppIntentAndState[] _mobileAppIntentAndStates;

        /// <summary>The list of troubleshooting events for this user.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgMobileAppIntentAndState[] MobileAppIntentAndStates { get => this._mobileAppIntentAndStates; set => this._mobileAppIntentAndStates = value; }

        /// <summary>Backing field for <see cref="MobileAppTroubleshootingEvents" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgMobileAppTroubleshootingEvent[] _mobileAppTroubleshootingEvents;

        /// <summary>The list of mobile app troubleshooting events for this user.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgMobileAppTroubleshootingEvent[] MobileAppTroubleshootingEvents { get => this._mobileAppTroubleshootingEvents; set => this._mobileAppTroubleshootingEvents = value; }

        /// <summary>Backing field for <see cref="MobilePhone" /> property.</summary>
        private string _mobilePhone;

        /// <summary>
        /// The primary cellular telephone number for the user. Read-only for users synced from on-premises directory. Supports $filter
        /// (eq, ne, NOT, ge, le, in, startsWith).
        /// </summary>
        public string MobilePhone { get => this._mobilePhone; set => this._mobilePhone = value; }

        /// <summary>Backing field for <see cref="MySite" /> property.</summary>
        private string _mySite;

        /// <summary>The URL for the user's personal site. Returned only on $select.</summary>
        public string MySite { get => this._mySite; set => this._mySite = value; }

        /// <summary>Backing field for <see cref="Notifications" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgNotification[] _notifications;

        public Microsoft.Graph.PowerShell.Users.Models.MgNotification[] Notifications { get => this._notifications; set => this._notifications = value; }

        /// <summary>Backing field for <see cref="Oauth2PermissionGrants" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgOAuth2PermissionGrant[] _oauth2PermissionGrants;

        public Microsoft.Graph.PowerShell.Users.Models.MgOAuth2PermissionGrant[] Oauth2PermissionGrants { get => this._oauth2PermissionGrants; set => this._oauth2PermissionGrants = value; }

        /// <summary>Backing field for <see cref="OfficeLocation" /> property.</summary>
        private string _officeLocation;

        /// <summary>
        /// The office location in the user's place of business. Maximum length is 128 characters. Supports $filter (eq, ne, NOT,
        /// ge, le, in, startsWith).
        /// </summary>
        public string OfficeLocation { get => this._officeLocation; set => this._officeLocation = value; }

        /// <summary>Backing field for <see cref="OnPremisesDistinguishedName" /> property.</summary>
        private string _onPremisesDistinguishedName;

        /// <summary>
        /// Contains the on-premises Active Directory distinguished name or DN. The property is only populated for customers who are
        /// synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only.
        /// </summary>
        public string OnPremisesDistinguishedName { get => this._onPremisesDistinguishedName; set => this._onPremisesDistinguishedName = value; }

        /// <summary>Backing field for <see cref="OnPremisesDomainName" /> property.</summary>
        private string _onPremisesDomainName;

        /// <summary>
        /// Contains the on-premises domainFQDN, also called dnsDomainName synchronized from the on-premises directory. The property
        /// is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure
        /// AD Connect. Read-only.
        /// </summary>
        public string OnPremisesDomainName { get => this._onPremisesDomainName; set => this._onPremisesDomainName = value; }

        /// <summary>Backing field for <see cref="OnPremisesExtensionAttributes" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgOnPremisesExtensionAttributes _onPremisesExtensionAttributes;

        /// <summary>onPremisesExtensionAttributes</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgOnPremisesExtensionAttributes OnPremisesExtensionAttributes { get => (this._onPremisesExtensionAttributes = this._onPremisesExtensionAttributes ?? new Microsoft.Graph.PowerShell.Users.Models.MgOnPremisesExtensionAttributes()); set => this._onPremisesExtensionAttributes = value; }

        /// <summary>Backing field for <see cref="OnPremisesImmutableId" /> property.</summary>
        private string _onPremisesImmutableId;

        /// <summary>
        /// This property is used to associate an on-premises Active Directory user account to their Azure AD user object. This property
        /// must be specified when creating a new user account in the Graph if you are using a federated domain for the user's userPrincipalName
        /// (UPN) property. Note: The $ and _ characters cannot be used when specifying this property. Supports $filter (eq, ne, NOT,
        /// ge, le, in).
        /// </summary>
        public string OnPremisesImmutableId { get => this._onPremisesImmutableId; set => this._onPremisesImmutableId = value; }

        /// <summary>Backing field for <see cref="OnPremisesLastSyncDateTime" /> property.</summary>
        private global::System.DateTime? _onPremisesLastSyncDateTime;

        /// <summary>
        /// Indicates the last time at which the object was synced with the on-premises directory; for example: '2013-02-16T03:04:54Z'.
        /// The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example,
        /// midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only. Supports $filter (eq, ne, NOT, ge, le, in).
        /// </summary>
        public global::System.DateTime? OnPremisesLastSyncDateTime { get => this._onPremisesLastSyncDateTime; set => this._onPremisesLastSyncDateTime = value; }

        /// <summary>Backing field for <see cref="OnPremisesProvisioningErrors" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgOnPremisesProvisioningError[] _onPremisesProvisioningErrors;

        /// <summary>
        /// Errors when using Microsoft synchronization product during provisioning. Supports $filter (eq, NOT, ge, le).
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgOnPremisesProvisioningError[] OnPremisesProvisioningErrors { get => this._onPremisesProvisioningErrors; set => this._onPremisesProvisioningErrors = value; }

        /// <summary>Backing field for <see cref="OnPremisesSamAccountName" /> property.</summary>
        private string _onPremisesSamAccountName;

        /// <summary>
        /// Contains the on-premises sAMAccountName synchronized from the on-premises directory. The property is only populated for
        /// customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only.
        /// Supports $filter (eq, ne, NOT, ge, le, in, startsWith).
        /// </summary>
        public string OnPremisesSamAccountName { get => this._onPremisesSamAccountName; set => this._onPremisesSamAccountName = value; }

        /// <summary>Backing field for <see cref="OnPremisesSecurityIdentifier" /> property.</summary>
        private string _onPremisesSecurityIdentifier;

        /// <summary>
        /// Contains the on-premises security identifier (SID) for the user that was synchronized from on-premises to the cloud. Read-only.
        /// </summary>
        public string OnPremisesSecurityIdentifier { get => this._onPremisesSecurityIdentifier; set => this._onPremisesSecurityIdentifier = value; }

        /// <summary>Backing field for <see cref="OnPremisesSyncEnabled" /> property.</summary>
        private bool? _onPremisesSyncEnabled;

        /// <summary>
        /// true if this object is synced from an on-premises directory; false if this object was originally synced from an on-premises
        /// directory but is no longer synced; null if this object has never been synced from an on-premises directory (default).
        /// Read-only. Supports $filter (eq, ne, NOT, in).
        /// </summary>
        public bool? OnPremisesSyncEnabled { get => this._onPremisesSyncEnabled; set => this._onPremisesSyncEnabled = value; }

        /// <summary>Backing field for <see cref="OnPremisesUserPrincipalName" /> property.</summary>
        private string _onPremisesUserPrincipalName;

        /// <summary>
        /// Contains the on-premises userPrincipalName synchronized from the on-premises directory. The property is only populated
        /// for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only.
        /// Supports $filter (eq, ne, NOT, ge, le, in, startsWith).
        /// </summary>
        public string OnPremisesUserPrincipalName { get => this._onPremisesUserPrincipalName; set => this._onPremisesUserPrincipalName = value; }

        /// <summary>Backing field for <see cref="Onenote" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgOnenote _onenote;

        /// <summary>onenote</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgOnenote Onenote { get => (this._onenote = this._onenote ?? new Microsoft.Graph.PowerShell.Users.Models.MgOnenote()); set => this._onenote = value; }

        /// <summary>Backing field for <see cref="OnlineMeetings" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgOnlineMeeting[] _onlineMeetings;

        public Microsoft.Graph.PowerShell.Users.Models.MgOnlineMeeting[] OnlineMeetings { get => this._onlineMeetings; set => this._onlineMeetings = value; }

        /// <summary>Backing field for <see cref="OtherMails" /> property.</summary>
        private string[] _otherMails;

        /// <summary>
        /// A list of additional email addresses for the user; for example: ['bob@contoso.com', 'Robert@fabrikam.com'].NOTE: While
        /// this property can contain accent characters, they can cause access issues to first-party applications for the user.Supports
        /// $filter (eq, NOT, ge, le, in, startsWith).
        /// </summary>
        public string[] OtherMails { get => this._otherMails; set => this._otherMails = value; }

        /// <summary>Backing field for <see cref="Outlook" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgOutlookUser _outlook;

        /// <summary>outlookUser</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgOutlookUser Outlook { get => (this._outlook = this._outlook ?? new Microsoft.Graph.PowerShell.Users.Models.MgOutlookUser()); set => this._outlook = value; }

        /// <summary>Backing field for <see cref="OwnedDevices" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] _ownedDevices;

        /// <summary>Devices that are owned by the user. Read-only. Nullable. Supports $expand.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] OwnedDevices { get => this._ownedDevices; set => this._ownedDevices = value; }

        /// <summary>Backing field for <see cref="OwnedObjects" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] _ownedObjects;

        /// <summary>
        /// Directory objects that are owned by the user. Read-only. Nullable. Supports $expand.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] OwnedObjects { get => this._ownedObjects; set => this._ownedObjects = value; }

        /// <summary>Backing field for <see cref="PasswordPolicies" /> property.</summary>
        private string _passwordPolicies;

        /// <summary>
        /// Specifies password policies for the user. This value is an enumeration with one possible value being DisableStrongPassword,
        /// which allows weaker passwords than the default policy to be specified. DisablePasswordExpiration can also be specified.
        /// The two may be specified together; for example: DisablePasswordExpiration, DisableStrongPassword.Supports $filter (ne,
        /// NOT).
        /// </summary>
        public string PasswordPolicies { get => this._passwordPolicies; set => this._passwordPolicies = value; }

        /// <summary>Backing field for <see cref="PasswordProfile" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgPasswordProfile _passwordProfile;

        /// <summary>passwordProfile</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgPasswordProfile PasswordProfile { get => (this._passwordProfile = this._passwordProfile ?? new Microsoft.Graph.PowerShell.Users.Models.MgPasswordProfile()); set => this._passwordProfile = value; }

        /// <summary>Backing field for <see cref="PastProjects" /> property.</summary>
        private string[] _pastProjects;

        /// <summary>A list for the user to enumerate their past projects. Returned only on $select.</summary>
        public string[] PastProjects { get => this._pastProjects; set => this._pastProjects = value; }

        /// <summary>Backing field for <see cref="PendingAccessReviewInstances" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgAccessReviewInstance[] _pendingAccessReviewInstances;

        /// <summary>Navigation property to get list of access reviews pending approval by reviewer.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgAccessReviewInstance[] PendingAccessReviewInstances { get => this._pendingAccessReviewInstances; set => this._pendingAccessReviewInstances = value; }

        /// <summary>Backing field for <see cref="People" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgPerson[] _people;

        /// <summary>
        /// Read-only. The most relevant people to the user. The collection is ordered by their relevance to the user, which is determined
        /// by the user's communication, collaboration and business relationships. A person is an aggregation of information from
        /// across mail, contacts and social networks.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgPerson[] People { get => this._people; set => this._people = value; }

        /// <summary>Backing field for <see cref="Photo" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgProfilePhoto _photo;

        /// <summary>profilePhoto</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgProfilePhoto Photo { get => (this._photo = this._photo ?? new Microsoft.Graph.PowerShell.Users.Models.MgProfilePhoto()); set => this._photo = value; }

        /// <summary>Backing field for <see cref="Photos" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgProfilePhoto[] _photos;

        /// <summary>Read-only. Nullable.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgProfilePhoto[] Photos { get => this._photos; set => this._photos = value; }

        /// <summary>Backing field for <see cref="Planner" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgPlannerUser _planner;

        /// <summary>plannerUser</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgPlannerUser Planner { get => (this._planner = this._planner ?? new Microsoft.Graph.PowerShell.Users.Models.MgPlannerUser()); set => this._planner = value; }

        /// <summary>Backing field for <see cref="PostalCode" /> property.</summary>
        private string _postalCode;

        /// <summary>
        /// The postal code for the user's postal address. The postal code is specific to the user's country/region. In the United
        /// States of America, this attribute contains the ZIP code. Maximum length is 40 characters. Supports $filter (eq, ne, NOT,
        /// ge, le, in, startsWith).
        /// </summary>
        public string PostalCode { get => this._postalCode; set => this._postalCode = value; }

        /// <summary>Backing field for <see cref="PreferredDataLocation" /> property.</summary>
        private string _preferredDataLocation;

        /// <summary>
        /// The preferred data location for the user. For more information, see OneDrive Online Multi-Geo.
        /// </summary>
        public string PreferredDataLocation { get => this._preferredDataLocation; set => this._preferredDataLocation = value; }

        /// <summary>Backing field for <see cref="PreferredLanguage" /> property.</summary>
        private string _preferredLanguage;

        /// <summary>
        /// The preferred language for the user. Should follow ISO 639-1 Code; for example en-US. Supports $filter (eq, ne, NOT, ge,
        /// le, in, startsWith).
        /// </summary>
        public string PreferredLanguage { get => this._preferredLanguage; set => this._preferredLanguage = value; }

        /// <summary>Backing field for <see cref="PreferredName" /> property.</summary>
        private string _preferredName;

        /// <summary>The preferred name for the user. Returned only on $select.</summary>
        public string PreferredName { get => this._preferredName; set => this._preferredName = value; }

        /// <summary>Backing field for <see cref="Presence" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgPresence _presence;

        /// <summary>presence</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgPresence Presence { get => (this._presence = this._presence ?? new Microsoft.Graph.PowerShell.Users.Models.MgPresence()); set => this._presence = value; }

        /// <summary>Backing field for <see cref="Profile" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgProfile _profile;

        /// <summary>profile</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgProfile Profile { get => (this._profile = this._profile ?? new Microsoft.Graph.PowerShell.Users.Models.MgProfile()); set => this._profile = value; }

        /// <summary>Backing field for <see cref="ProvisionedPlans" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgProvisionedPlan[] _provisionedPlans;

        /// <summary>
        /// The plans that are provisioned for the user. Read-only. Not nullable. Supports $filter (eq, NOT, ge, le).
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgProvisionedPlan[] ProvisionedPlans { get => this._provisionedPlans; set => this._provisionedPlans = value; }

        /// <summary>Backing field for <see cref="ProxyAddresses" /> property.</summary>
        private string[] _proxyAddresses;

        /// <summary>
        /// For example: ['SMTP: bob@contoso.com', 'smtp: bob@sales.contoso.com']. Read-only, Not nullable. Supports $filter (eq,
        /// NOT, ge, le, startsWith).
        /// </summary>
        public string[] ProxyAddresses { get => this._proxyAddresses; set => this._proxyAddresses = value; }

        /// <summary>Backing field for <see cref="RefreshTokensValidFromDateTime" /> property.</summary>
        private global::System.DateTime? _refreshTokensValidFromDateTime;

        /// <summary>
        /// Any refresh tokens or sessions tokens (session cookies) issued before this time are invalid, and applications will get
        /// an error when using an invalid refresh or sessions token to acquire a delegated access token (to access APIs such as Microsoft
        /// Graph). If this happens, the application will need to acquire a new refresh token by making a request to the authorize
        /// endpoint. Read-only. Use invalidateAllRefreshTokens to reset.
        /// </summary>
        public global::System.DateTime? RefreshTokensValidFromDateTime { get => this._refreshTokensValidFromDateTime; set => this._refreshTokensValidFromDateTime = value; }

        /// <summary>Backing field for <see cref="RegisteredDevices" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] _registeredDevices;

        /// <summary>
        /// Devices that are registered for the user. Read-only. Nullable. Supports $expand.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] RegisteredDevices { get => this._registeredDevices; set => this._registeredDevices = value; }

        /// <summary>Backing field for <see cref="Responsibilities" /> property.</summary>
        private string[] _responsibilities;

        /// <summary>
        /// A list for the user to enumerate their responsibilities. Returned only on $select.
        /// </summary>
        public string[] Responsibilities { get => this._responsibilities; set => this._responsibilities = value; }

        /// <summary>Backing field for <see cref="Schools" /> property.</summary>
        private string[] _schools;

        /// <summary>
        /// A list for the user to enumerate the schools they have attended. Returned only on $select.
        /// </summary>
        public string[] Schools { get => this._schools; set => this._schools = value; }

        /// <summary>Backing field for <see cref="ScopedRoleMemberOf" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgScopedRoleMembership[] _scopedRoleMemberOf;

        /// <summary>
        /// The scoped-role administrative unit memberships for this user. Read-only. Nullable.
        /// </summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgScopedRoleMembership[] ScopedRoleMemberOf { get => this._scopedRoleMemberOf; set => this._scopedRoleMemberOf = value; }

        /// <summary>Backing field for <see cref="Settings" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgUserSettings _settings;

        /// <summary>userSettings</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgUserSettings Settings { get => (this._settings = this._settings ?? new Microsoft.Graph.PowerShell.Users.Models.MgUserSettings()); set => this._settings = value; }

        /// <summary>Backing field for <see cref="ShowInAddressList" /> property.</summary>
        private bool? _showInAddressList;

        /// <summary>
        /// true if the Outlook global address list should contain this user, otherwise false. If not set, this will be treated as
        /// true. For users invited through the invitation manager, this property will be set to false. Supports $filter (eq, ne,
        /// NOT, in).
        /// </summary>
        public bool? ShowInAddressList { get => this._showInAddressList; set => this._showInAddressList = value; }

        /// <summary>Backing field for <see cref="SignInActivity" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgSignInActivity _signInActivity;

        /// <summary>signInActivity</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgSignInActivity SignInActivity { get => (this._signInActivity = this._signInActivity ?? new Microsoft.Graph.PowerShell.Users.Models.MgSignInActivity()); set => this._signInActivity = value; }

        /// <summary>Backing field for <see cref="SignInSessionsValidFromDateTime" /> property.</summary>
        private global::System.DateTime? _signInSessionsValidFromDateTime;

        /// <summary>
        /// Any refresh tokens or sessions tokens (session cookies) issued before this time are invalid, and applications will get
        /// an error when using an invalid refresh or sessions token to acquire a delegated access token (to access APIs such as Microsoft
        /// Graph). If this happens, the application will need to acquire a new refresh token by making a request to the authorize
        /// endpoint. Read-only. Use revokeSignInSessions to reset.
        /// </summary>
        public global::System.DateTime? SignInSessionsValidFromDateTime { get => this._signInSessionsValidFromDateTime; set => this._signInSessionsValidFromDateTime = value; }

        /// <summary>Backing field for <see cref="Skills" /> property.</summary>
        private string[] _skills;

        /// <summary>A list for the user to enumerate their skills. Returned only on $select.</summary>
        public string[] Skills { get => this._skills; set => this._skills = value; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private string _state;

        /// <summary>
        /// The state or province in the user's address. Maximum length is 128 characters. Supports $filter (eq, ne, NOT, ge, le,
        /// in, startsWith).
        /// </summary>
        public string State { get => this._state; set => this._state = value; }

        /// <summary>Backing field for <see cref="StreetAddress" /> property.</summary>
        private string _streetAddress;

        /// <summary>
        /// The street address of the user's place of business. Maximum length is 1024 characters. Supports $filter (eq, ne, NOT,
        /// ge, le, in, startsWith).
        /// </summary>
        public string StreetAddress { get => this._streetAddress; set => this._streetAddress = value; }

        /// <summary>Backing field for <see cref="Surname" /> property.</summary>
        private string _surname;

        /// <summary>
        /// The user's surname (family name or last name). Maximum length is 64 characters. Supports $filter (eq, ne, NOT, ge, le,
        /// in, startsWith).
        /// </summary>
        public string Surname { get => this._surname; set => this._surname = value; }

        /// <summary>Backing field for <see cref="Teamwork" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgUserTeamwork _teamwork;

        /// <summary>userTeamwork</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgUserTeamwork Teamwork { get => (this._teamwork = this._teamwork ?? new Microsoft.Graph.PowerShell.Users.Models.MgUserTeamwork()); set => this._teamwork = value; }

        /// <summary>Backing field for <see cref="Todo" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgTodo _todo;

        /// <summary>todo</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgTodo Todo { get => (this._todo = this._todo ?? new Microsoft.Graph.PowerShell.Users.Models.MgTodo()); set => this._todo = value; }

        /// <summary>Backing field for <see cref="TransitiveMemberOf" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] _transitiveMemberOf;

        public Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] TransitiveMemberOf { get => this._transitiveMemberOf; set => this._transitiveMemberOf = value; }

        /// <summary>Backing field for <see cref="TransitiveReports" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] _transitiveReports;

        /// <summary>The transitive reports for a user. Read-only.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgDirectoryObject[] TransitiveReports { get => this._transitiveReports; set => this._transitiveReports = value; }

        /// <summary>Backing field for <see cref="UsageLocation" /> property.</summary>
        private string _usageLocation;

        /// <summary>
        /// A two letter country code (ISO standard 3166). Required for users that will be assigned licenses due to legal requirement
        /// to check for availability of services in countries. Examples include: US, JP, and GB. Not nullable. Supports $filter (eq,
        /// ne, NOT, ge, le, in, startsWith).
        /// </summary>
        public string UsageLocation { get => this._usageLocation; set => this._usageLocation = value; }

        /// <summary>Backing field for <see cref="UsageRights" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgUsageRight[] _usageRights;

        public Microsoft.Graph.PowerShell.Users.Models.MgUsageRight[] UsageRights { get => this._usageRights; set => this._usageRights = value; }

        /// <summary>Backing field for <see cref="UserPrincipalName" /> property.</summary>
        private string _userPrincipalName;

        /// <summary>
        /// The user principal name (UPN) of the user. The UPN is an Internet-style login name for the user based on the Internet
        /// standard RFC 822. By convention, this should map to the user's email name. The general format is alias@domain, where domain
        /// must be present in the tenant's collection of verified domains. This property is required when a user is created. The
        /// verified domains for the tenant can be accessed from the verifiedDomains property of organization.NOTE: While this property
        /// can contain accent characters, they can cause access issues to first-party applications for the user. Supports $filter
        /// (eq, ne, NOT, ge, le, in, startsWith, endsWith) and $orderBy.
        /// </summary>
        public string UserPrincipalName { get => this._userPrincipalName; set => this._userPrincipalName = value; }

        /// <summary>Backing field for <see cref="UserType" /> property.</summary>
        private string _userType;

        /// <summary>
        /// A string value that can be used to classify user types in your directory, such as Member and Guest. Supports $filter (eq,
        /// ne, NOT, in,).
        /// </summary>
        public string UserType { get => this._userType; set => this._userType = value; }

        /// <summary>
        /// Backing field for <see cref="WindowsInformationProtectionDeviceRegistrations" /> property.
        /// </summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgWindowsInformationProtectionDeviceRegistration[] _windowsInformationProtectionDeviceRegistrations;

        /// <summary>Zero or more WIP device registrations that belong to the user.</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgWindowsInformationProtectionDeviceRegistration[] WindowsInformationProtectionDeviceRegistrations { get => this._windowsInformationProtectionDeviceRegistrations; set => this._windowsInformationProtectionDeviceRegistrations = value; }

    }
}