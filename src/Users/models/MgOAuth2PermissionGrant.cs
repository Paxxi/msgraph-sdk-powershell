// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>oAuth2PermissionGrant</summary>
    public partial class MgOAuth2PermissionGrant
    {

        /// <summary>Backing field for <see cref="ClientId" /> property.</summary>
        private string _clientId;

        /// <summary>
        /// The id of the client service principal for the application which is authorized to act on behalf of a signed-in user when
        /// accessing an API. Required. Supports $filter (eq only).
        /// </summary>
        public string ClientId { get => this._clientId; set => this._clientId = value; }

        /// <summary>Backing field for <see cref="ConsentType" /> property.</summary>
        private string _consentType;

        /// <summary>
        /// Indicates whether authorization is granted for the client application to impersonate all users or only a specific user.
        /// AllPrincipals indicates authorization to impersonate all users. Principal indicates authorization to impersonate a specific
        /// user. Consent on behalf of all users can be granted by an administrator. Non-admin users may be authorized to consent
        /// on behalf of themselves in some cases, for some delegated permissions. Required. Supports $filter (eq only).
        /// </summary>
        public string ConsentType { get => this._consentType; set => this._consentType = value; }

        /// <summary>Backing field for <see cref="ExpiryTime" /> property.</summary>
        private global::System.DateTime? _expiryTime;

        /// <summary>
        /// Currently, the end time value is ignored, but a value is required when creating an oAuth2PermissionGrant. Required.
        /// </summary>
        public global::System.DateTime? ExpiryTime { get => this._expiryTime; set => this._expiryTime = value; }

        /// <summary>Read-only.</summary>
        public string Id { get; set; }

        /// <summary>Backing field for <see cref="PrincipalId" /> property.</summary>
        private string _principalId;

        /// <summary>
        /// The id of the user on behalf of whom the client is authorized to access the resource, when consentType is Principal. If
        /// consentType is AllPrincipals this value is null. Required when consentType is Principal.
        /// </summary>
        public string PrincipalId { get => this._principalId; set => this._principalId = value; }

        /// <summary>Backing field for <see cref="ResourceId" /> property.</summary>
        private string _resourceId;

        /// <summary>
        /// The id of the resource service principal to which access is authorized. This identifies the API which the client is authorized
        /// to attempt to call on behalf of a signed-in user.
        /// </summary>
        public string ResourceId { get => this._resourceId; set => this._resourceId = value; }

        /// <summary>Backing field for <see cref="Scope" /> property.</summary>
        private string _scope;

        /// <summary>
        /// A space-separated list of the claim values for delegated permissions which should be included in access tokens for the
        /// resource application (the API). For example, openid User.Read GroupMember.Read.All. Each claim value should match the
        /// value field of one of the delegated permissions defined by the API, listed in the publishedPermissionScopes property of
        /// the resource service principal.
        /// </summary>
        public string Scope { get => this._scope; set => this._scope = value; }

        /// <summary>Backing field for <see cref="StartTime" /> property.</summary>
        private global::System.DateTime? _startTime;

        /// <summary>
        /// Currently, the start time value is ignored, but a value is required when creating an oAuth2PermissionGrant. Required.
        /// </summary>
        public global::System.DateTime? StartTime { get => this._startTime; set => this._startTime = value; }

    }
}