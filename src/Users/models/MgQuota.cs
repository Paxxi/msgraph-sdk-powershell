// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.6.2, generator: @autorest/powershell@3.0.0)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Graph.PowerShell.Users.Models
{

    /// <summary>quota</summary>
    public partial class MgQuota
    {

        /// <summary>Backing field for <see cref="Deleted" /> property.</summary>
        private long? _deleted;

        /// <summary>Total space consumed by files in the recycle bin, in bytes. Read-only.</summary>
        public long? Deleted { get => this._deleted; set => this._deleted = value; }

        /// <summary>Backing field for <see cref="Remaining" /> property.</summary>
        private long? _remaining;

        /// <summary>Total space remaining before reaching the quota limit, in bytes. Read-only.</summary>
        public long? Remaining { get => this._remaining; set => this._remaining = value; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private string _state;

        /// <summary>Enumeration value that indicates the state of the storage space. Read-only.</summary>
        public string State { get => this._state; set => this._state = value; }

        /// <summary>Backing field for <see cref="StoragePlanInformation" /> property.</summary>
        private Microsoft.Graph.PowerShell.Users.Models.MgStoragePlanInformation _storagePlanInformation;

        /// <summary>storagePlanInformation</summary>
        public Microsoft.Graph.PowerShell.Users.Models.MgStoragePlanInformation StoragePlanInformation { get => (this._storagePlanInformation = this._storagePlanInformation ?? new Microsoft.Graph.PowerShell.Users.Models.MgStoragePlanInformation()); set => this._storagePlanInformation = value; }

        /// <summary>Backing field for <see cref="Total" /> property.</summary>
        private long? _total;

        /// <summary>Total allowed storage space, in bytes. Read-only.</summary>
        public long? Total { get => this._total; set => this._total = value; }

        /// <summary>Backing field for <see cref="Used" /> property.</summary>
        private long? _used;

        /// <summary>Total space used, in bytes. Read-only.</summary>
        public long? Used { get => this._used; set => this._used = value; }

    }
}